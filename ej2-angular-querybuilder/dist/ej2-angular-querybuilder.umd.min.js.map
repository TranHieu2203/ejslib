/*!
*  filename: ej2-angular-querybuilder.umd.min.js.map
*  version : 20.2.43
*  Copyright Syncfusion Inc. 2001 - 2018. All rights reserved.
*  Use of this code is subject to the terms of our license.
*  A copy of the current license can be obtained at any time by e-mailing
*  licensing@syncfusion.com. Any infringement will be prosecuted under
*  applicable laws. 
*/

{"version":3,"file":"ej2-angular-querybuilder.umd.min.js","sources":["~/@syncfusion/ej2-angular-querybuilder/src/query-builder/columns.directive.ts","~/@syncfusion/ej2-angular-querybuilder/src/query-builder/querybuilder.component.ts","~/@syncfusion/ej2-angular-querybuilder/src/query-builder/querybuilder.module.ts","~/@syncfusion/ej2-angular-querybuilder/src/query-builder/querybuilder-all.module.ts"],"sourcesContent":["import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet /** @type {?} */ input: string[] = ['category', 'columns', 'field', 'format', 'label', 'operators', 'ruleTemplate', 'step', 'template', 'type', 'validation', 'value', 'values'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * `e-column` directive represent a column of the Angular QueryBuilder. \n * It must be contained in a QueryBuilder component(`ejs-querybuilder`). \n * ```html\n * <ejs-querybuilder [dataSource]='data'> \n *   <e-columns>\n *    <e-column field='ID' label='ID' type='number'></e-column>\n *    <e-column field='Date' label='Date' type='date' format='dd/MM/yyyy'></e-column>\n *   </e-columns>\n * </ejs-querybuilder>\n * ```\n */\nexport class ColumnDirective extends ComplexBase<ColumnDirective> {\npublic directivePropList: any;\n/**\n * Specifies the types in columns field.\n * \\@default null\n */\npublic type: any;\n/**\n * Specifies the category for columns.\n * \\@default null\n */\npublic category: any;\n/**\n * Specifies the sub fields in columns.\n * \\@default null\n */\npublic columns: any;\n/**\n * Specifies the fields in columns.\n * \\@default null\n */\npublic field: any;\n/**\n * Specifies the date format for columns.\n * \\@asptype string\n * \\@blazortype string\n * \\@default null\n */\npublic format: any;\n/**\n * Specifies the labels name in columns.\n * \\@default null\n */\npublic label: any;\n/**\n * Specifies the operators in columns.\n * \\@default null\n */\npublic operators: any;\n/**\n * Specifies the step value(numeric textbox) for columns.\n * \\@default null\n */\npublic step: any;\n/**\n * Specifies the validation for columns (text, number and date).\n * \\@default { isRequired: true , min: 0, max: Number.MAX_VALUE }\n */\npublic validation: any;\n/**\n * Specifies the default value for columns.\n * \\@default null\n */\npublic value: any;\n/**\n * Specifies the values in columns or bind the values from sub controls.\n * \\@default null\n */\npublic values: any;\n/**\n * Specifies the rule template for the field with any other widgets.\n * \\@default null\n */\n@Template()\n    public ruleTemplate: any;\n/**\n * Specifies the template for value field such as slider or any other widgets.\n * \\@default null\n */\n@Template()\n    public template: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-querybuilder>e-columns>e-column',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ruleTemplate': [{ type: ContentChild, args: ['ruleTemplate', ] },],\n'template': [{ type: ContentChild, args: ['template', ] },],\n};\n}\n\nfunction ColumnDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnDirective.ctorParameters;\n/** @type {?} */\nColumnDirective.propDecorators;\n/** @type {?} */\nColumnDirective.prototype.directivePropList;\n/**\n * Specifies the types in columns field.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.type;\n/**\n * Specifies the category for columns.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.category;\n/**\n * Specifies the sub fields in columns.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.columns;\n/**\n * Specifies the fields in columns.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.field;\n/**\n * Specifies the date format for columns.\n * \\@asptype string\n * \\@blazortype string\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.format;\n/**\n * Specifies the labels name in columns.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.label;\n/**\n * Specifies the operators in columns.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.operators;\n/**\n * Specifies the step value(numeric textbox) for columns.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.step;\n/**\n * Specifies the validation for columns (text, number and date).\n * \\@default { isRequired: true , min: 0, max: Number.MAX_VALUE }\n * @type {?}\n */\nColumnDirective.prototype.validation;\n/**\n * Specifies the default value for columns.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.value;\n/**\n * Specifies the values in columns or bind the values from sub controls.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.values;\n/**\n * Specifies the rule template for the field with any other widgets.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.ruleTemplate;\n/**\n * Specifies the template for value field such as slider or any other widgets.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.template;\n/** @type {?} */\nColumnDirective.prototype.viewContainerRef;\n}\n\n/**\n * Column Array Directive\n */\nexport class ColumnsDirective extends ArrayBase<ColumnsDirective> {\nconstructor() {\n        super('columns');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-querybuilder>e-columns',\n    queries: {\n        children: new ContentChildren(ColumnDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColumnsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { QueryBuilder } from '@syncfusion/ej2-querybuilder';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { ColumnsDirective } from './columns.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['allowValidation','columns','cssClass','dataSource','displayMode','enableNotCondition','enablePersistence','enableRtl','fieldMode','fieldModel','headerTemplate','height','immediateModeDelay','locale','matchCase','maxGroupCount','operatorModel','readonly','rule','separator','showButtons','sortDirection','summaryView','valueModel','width'];\nexport const /** @type {?} */ outputs: string[] = ['actionBegin','beforeChange','change','created','dataBound','ruleChange'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * Represents the EJ2 Angular QueryBuilder Component.\n * ```html\n * <ejs-querybuilder></ejs-querybuilder>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class QueryBuilderComponent extends QueryBuilder implements IComponentBase {\npublic context : any;\npublic tagObjects: any;\n\tactionBegin: any;\n\tbeforeChange: any;\n\tchange: any;\n\tcreated: any;\n\tdataBound: any;\npublic ruleChange: any;\npublic childColumns: QueryList<ColumnsDirective>;\npublic tags: string[] = ['columns'];\n/**\n * Specifies the template for the header with any other widgets.\n * \\@default null\n */\n@Template()\n    public headerTemplate: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childColumns;\n        this.context.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-querybuilder',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childColumns: new ContentChild(ColumnsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'headerTemplate': [{ type: ContentChild, args: ['headerTemplate', ] },],\n};\n}\n\nfunction QueryBuilderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryBuilderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nQueryBuilderComponent.ctorParameters;\n/** @type {?} */\nQueryBuilderComponent.propDecorators;\n/** @type {?} */\nQueryBuilderComponent.prototype.context;\n/** @type {?} */\nQueryBuilderComponent.prototype.tagObjects;\n/** @type {?} */\nQueryBuilderComponent.prototype.actionBegin;\n/** @type {?} */\nQueryBuilderComponent.prototype.beforeChange;\n/** @type {?} */\nQueryBuilderComponent.prototype.change;\n/** @type {?} */\nQueryBuilderComponent.prototype.created;\n/** @type {?} */\nQueryBuilderComponent.prototype.dataBound;\n/** @type {?} */\nQueryBuilderComponent.prototype.ruleChange;\n/** @type {?} */\nQueryBuilderComponent.prototype.childColumns;\n/** @type {?} */\nQueryBuilderComponent.prototype.tags;\n/**\n * Specifies the template for the header with any other widgets.\n * \\@default null\n * @type {?}\n */\nQueryBuilderComponent.prototype.headerTemplate;\n/** @type {?} */\nQueryBuilderComponent.prototype.registerEvents;\n/** @type {?} */\nQueryBuilderComponent.prototype.addTwoWay;\n/** @type {?} */\nQueryBuilderComponent.prototype.ngEle;\n/** @type {?} */\nQueryBuilderComponent.prototype.srenderer;\n/** @type {?} */\nQueryBuilderComponent.prototype.viewContainerRef;\n/** @type {?} */\nQueryBuilderComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColumnDirective, ColumnsDirective } from './columns.directive';\nimport { QueryBuilderComponent } from './querybuilder.component';\n/**\n * NgModule definition for the QueryBuilder component.\n */\nexport class QueryBuilderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        QueryBuilderComponent,\n        ColumnDirective,\n        ColumnsDirective\n    ],\n    exports: [\n        QueryBuilderComponent,\n        ColumnDirective,\n        ColumnsDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction QueryBuilderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryBuilderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nQueryBuilderModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColumnDirective, ColumnsDirective } from './columns.directive';\nimport { QueryBuilderComponent } from './querybuilder.component';\nimport { QueryBuilderModule } from './querybuilder.module';\n/**\n * NgModule definition for the QueryBuilder component with providers.\n */\nexport class QueryBuilderAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, QueryBuilderModule],\n    exports: [\n        QueryBuilderModule\n    ],\n    providers:[\n        \n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction QueryBuilderAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryBuilderAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nQueryBuilderAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["input","outputs","ColumnDirective","_super","viewContainerRef","_this","call","this","setValue","registerEvents","directivePropList","__extends","ComplexBase","decorators","type","Directive","args","selector","inputs","queries","ctorParameters","ViewContainerRef","propDecorators","ruleTemplate","ContentChild","template","__decorate","Template","prototype","ColumnsDirective","ArrayBase","children","ContentChildren","twoWays","exports","QueryBuilderComponent","ngEle","srenderer","injector","tags","element","nativeElement","injectedModules","addTwoWay","context","ComponentBase","ngOnInit","ngAfterViewInit","ngOnDestroy","ngAfterContentChecked","tagObjects","instance","childColumns","QueryBuilder","Component","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","Renderer2","Injector","headerTemplate","ComponentMixins","__metadata","QueryBuilderModule","NgModule","imports","CommonModule","declarations","QueryBuilderAllModule","providers"],"mappings":"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"}

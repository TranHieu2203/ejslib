{"version":3,"file":"ej2-circulargauge.min.js","sources":["../../src/circular-gauge/utils/helper-common.js","../../src/circular-gauge/utils/helper-circular-gauge.js","../../src/circular-gauge/model/theme.js","../../src/circular-gauge/utils/helper-tooltip.js","../../src/circular-gauge/utils/helper-axis-panel.js","../../src/circular-gauge/utils/helper-axis-renderer.js","../../src/circular-gauge/utils/helper-pointer-renderer.js","../../src/circular-gauge/utils/helper-legend.js","../../src/circular-gauge/model/base.js","../../src/circular-gauge/axes/axis.js","../../src/circular-gauge/annotations/annotations.js","../../src/circular-gauge/model/constants.js","../../src/circular-gauge/user-interaction/tooltip.js","../../src/circular-gauge/axes/axis-renderer.js","../../src/circular-gauge/axes/pointer-renderer.js","../../src/circular-gauge/axes/axis-panel.js","../../src/circular-gauge/legend/legend.js","../../src/circular-gauge/model/pdf-export.js","../../src/circular-gauge/model/image-export.js","../../src/circular-gauge/model/print.js","../../src/circular-gauge/axes/gradient.js","../../src/circular-gauge/circular-gauge.js","../../src/global.js"],"sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Common Helper methods\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { compile as templateComplier, isNullOrUndefined, remove, createElement, merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @param  {string} id - Specifies the id of the text.\n * @returns {Size} - Returns the size of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n *\n * @param {string} value - Specifies the value.\n * @param {number} maxDimension - Specifies the  maximum dimension.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n *\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to create the text element.\n *\n * @param {TextOption} options - Specifies the options.\n * @param {FontModel} font - Specifies the font.\n * @param {string} color - Specifies the color.\n * @param {HTMLElement | Element} parent - Specifies the html element.\n * @param {string} styles - Specifies the style.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {};\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    var htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n *\n * @param {PathOption} options - Specifies the options.\n * @param {Element} element - Specifies the element.\n * @param {CircularGauge} gauge - Specifies the gauge.\n * @param {string} functionName - Specifies the function name.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {boolean} Returns the boolean value.\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get the degree for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the angle from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get angle from location for circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {GaugeLocation} point - Specifies the point.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n *\n * @param {number} degree - Specifies the degree.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} center - Specifies the center.\n * @returns {GaugeLocation} - Returns the gauge location.\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {number} start - Specifies the start.\n * @param {number} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} startWidth - Specifies the startWidth.\n * @param {number} endWidth - Specifies the endWidth.\n * @param {Range} range - Specifies the range.\n * @param {Axis} axis - Specifies the axis.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {\n    if (isNullOrUndefined(range) || (range.start !== range.end)) {\n        end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    }\n    var degree = getDegree(start, end);\n    var startRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + startWidth : range.position === 'Cross'\n        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;\n    var endRadius = !isNullOrUndefined(range) ? (range.position === 'Outside'\n        && !range.isLinearCircularGradient ? radius + endWidth : range.position === 'Cross' &&\n        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;\n    var arcRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + ((startWidth + endWidth) / 2) :\n        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)\n            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);\n    var insideArcRadius = !isNullOrUndefined(range) && range.position === 'Cross' ?\n        radius + ((startWidth + endWidth) / 4)\n            - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;\n    var insideEndRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?\n        radius - ((startWidth - endWidth) / 2) : radius;\n    var insideStartRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?\n        radius + ((startWidth - endWidth) / 2) : radius;\n    if (startWidth !== undefined && endWidth !== undefined) {\n        insideEndRadius = range.position === 'Cross' ? (degree > 325 ? insideStartRadius : insideEndRadius) : insideEndRadius;\n        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, startRadius, endRadius, arcRadius, (degree < 180) ? 0 : 1, center, degree, range, axis);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcPath(start, end, radius, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + pointPosition.x\n        + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo\n        + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z ';\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition) {\n    var roundedPath = 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y;\n    if (isNullOrUndefined(arcStartTwo) && isNullOrUndefined(arcEndTwo)) {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' '\n            + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n    else {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 '\n            + pointPosition.x + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo + ' 0 ' + clockWise + ' 0 '\n            + innerStart.x + ' ' + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n}\n/**\n * Function to get the range path direction for different start and end width of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the options.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {number} radius - Specifies the radius.\n * @param {number} startRadius - Specifies the startRadius.\n * @param {number} endRadius - Specifies the endRadius.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the range path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start values.\n * @param {GaugeLocation} end - Specifies the end values.\n * @param {GaugeLocation} innerStart - Specifies the innerStart values.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd values.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the string value.\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, degree, range, axis) {\n    var startWidth = range.startWidth;\n    var endWidth = range.endWidth;\n    var widthDifference = Math.abs(startWidth - endWidth);\n    var endArc;\n    var startArc;\n    if (startWidth > endWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (endRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (startRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if (endWidth > startWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (startRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (endRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n    }\n    else if ((degree > 260) || (!range.isLinearCircularGradient && axis.startAngle === 0 && axis.endAngle === 0)) {\n        return arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, null, null, null, null, startWidth, endWidth, degree, range, axis);\n    }\n    else {\n        if (range.position === 'Cross' || range.position === 'Outside') {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n        }\n        else {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n    }\n}\n/**\n * Function to get start and end width range path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the svg path.\n * @private\n */\nexport function arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, startWidth, endWidth, degree, range, axis) {\n    if (!isNullOrUndefined(range)) {\n        var arcStartOne = void 0;\n        var arcEndOne = void 0;\n        var widthDifference = Math.abs(startWidth - endWidth);\n        var arcStartTwo = void 0;\n        var arcEndTwo = void 0;\n        var startValueToAngle = getAngleFromValue(((range.start + range.end) / 2), axis.maximum, axis.minimum, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var pointPosition = (startWidth < ((endWidth))) ?\n            getLocationFromAngle(startValueToAngle, endRadius, center) : getLocationFromAngle(startValueToAngle, startRadius, center);\n        // eslint-disable-next-line max-len\n        var endDistance = Math.sqrt((Math.pow((innerEnd.x - pointPosition.x), 2)) + (Math.pow((innerEnd.y - pointPosition.y), 2)));\n        var endRadii = endDistance / 2;\n        var centerStartDistance = Math.sqrt((Math.pow((center.x - innerStart.x), 2)) + (Math.pow((center.y - innerStart.y), 2)));\n        var centerDistance = Math.sqrt((Math.pow((center.x - pointPosition.x), 2)) + (Math.pow((center.y - pointPosition.y), 2)));\n        if (range.roundedCornerRadius <= 0) {\n            widthDifference = widthDifference === 0 ? 1 : widthDifference;\n            innerEnd.y = (range.position === 'Cross' && axis.direction === 'ClockWise') ? degree > 325 ?\n                innerEnd.y - (widthDifference / 2) : innerEnd.y : innerEnd.y;\n            var degreeValue = range.position === 'Cross' ? 330 : 325;\n            if (((degreeValue <= degree && degree <= 360))) {\n                arcStartTwo = (axis.direction === 'ClockWise' ? (centerDistance / 2)\n                    : (degree >= 345 ? (startRadius - (widthDifference / 2) - (endWidth / 2))\n                        : range.position === 'Cross' ? (startRadius + (widthDifference / 4) - (startWidth / 2))\n                            : (startRadius - (widthDifference / 2) - (startWidth / 2))));\n                arcEndTwo = (axis.direction === 'ClockWise' ? (centerStartDistance / 2)\n                    : range.position === 'Cross' ?\n                        (endRadius + (widthDifference / 4)) - (endWidth / 4) :\n                        (range.position === 'Outside' && axis.direction === 'AntiClockWise') ? degree < 345 ?\n                            (startRadius - (widthDifference) - (endWidth / 4))\n                            : (startRadius - (widthDifference / 2))\n                            : (endRadius + (widthDifference / 2)) - (endWidth / 2));\n                return arcPath(start, end, radius, endRadii, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition);\n            }\n            else if ((degree > 260 && degree < 325) && range.position !== 'Cross' && range.position !== 'Outside') {\n                var arcStart = (arcRadius - (widthDifference / 2));\n                var arcEnd = (arcRadius - (widthDifference / 2));\n                var angleValueDirection = axis.direction === 'ClockWise' ? degree >= 310 : degree < 345;\n                if (degree < 310) {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcStart, arcEnd, clockWise);\n                }\n                else if (degree >= 310 || angleValueDirection) {\n                    arcStart = (arcRadius - (widthDifference));\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcEnd, arcStart, clockWise);\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n            else {\n                if (range.position === 'Cross') {\n                    var endRadiusValue = axis.direction === 'ClockWise' ? degree <= 300 && degree >= 260 ?\n                        endRadius - (widthDifference / 2) - (startWidth / 4) : endRadius\n                        - (widthDifference) - (startWidth / 2) : degree <= 300 && degree >= 260 ?\n                        endRadius + (widthDifference / 4) - (startWidth / 4) :\n                        endRadius + (widthDifference / 4) - (startWidth / 2);\n                    var startRadiusValue = axis.direction === 'ClockWise' ? degree > 325 ? degree > 340 ? (startRadius - startWidth)\n                        - (widthDifference / 4) : startRadius - (widthDifference / 4)\n                        : startRadius : startRadius - (widthDifference / 4);\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadiusValue, endRadiusValue, clockWise);\n                }\n                else if (range.position === 'Outside') {\n                    if (degree < 325 && degree > 285) {\n                        var arcTwo = void 0;\n                        var startGreater = startWidth / 2;\n                        var endGreater = endWidth / 2;\n                        var arcOne = arcTwo = arcRadius + (widthDifference / 2) + startGreater + endGreater;\n                        innerEnd.y = axis.direction === 'ClockWise' && startWidth !== endWidth && startWidth > widthDifference ?\n                            innerEnd.y - (widthDifference / 2) : innerEnd.y + startGreater;\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcOne, arcTwo, clockWise);\n                    }\n                    else {\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n                    }\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n        }\n        else {\n            var degreeAngle = axis.endAngle < 4 ? 356 : 360;\n            clockWise = degree > degreeAngle ? 0 : clockWise;\n            var degreeValueOne = axis.direction === 'ClockWise' ? 327 : 322;\n            var degreeValueTwo = axis.direction === 'ClockWise' ? 328 : 325;\n            if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n            else if ((degree <= degreeAngle && degree > degreeValueOne) && range.roundedCornerRadius > 0) {\n                arcStartOne = axis.direction === 'ClockWise' ? degree < 334 && degree > 324 ? endRadii - (widthDifference / 2) :\n                    endRadii - (widthDifference / 4) : endRadii;\n                arcStartTwo = (centerDistance / 2);\n                arcEndTwo = axis.direction === 'ClockWise' ? ((centerStartDistance / 2) + (widthDifference / 2)) :\n                    (centerStartDistance / 2);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition);\n            }\n            else if (degree > 270 && degree < degreeValueTwo) {\n                var startAddArc = endRadius + (widthDifference / 2) - (endWidth / 2);\n                var startSubArc = endRadius - (widthDifference / 2) - (endWidth / 2);\n                arcStartOne = (startRadius - (widthDifference / 2) - (startWidth / 2));\n                arcEndOne = (axis.direction === 'ClockWise' ? startSubArc : startAddArc);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, null, null, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, null);\n            }\n            else {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n        }\n    }\n    else {\n        return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n    }\n}\n/**\n * Function to get start and end width range rounded path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} actualStart - Specifies the actualStart value.\n * @param {number} actualEnd - Specifies the actualEnd value.\n * @param {number} oldStart - Specifies the oldStart value.\n * @param {number} oldEnd - Specifies the oldEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth, range, axis) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return arcWidthPathCalculation(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1, center, getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), startWidth, endWidth, degree, range, axis);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to compile the template function for circular gauge.\n *\n * @param {string} template - Specifies the template.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {Function} - Returns the template function.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getTemplateFunction(template, gauge) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var e;\n    try {\n        if (isNaN(parseFloat(template)) && document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n        else if (gauge.isVue || gauge.isVue3) {\n            templateFn = templateComplier(template);\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n *\n * @param {string} id Specifies the id\n * @returns {void}\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get element from id.\n *\n * @param {string} id - Specifies the id.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to convert the number from string.\n *\n * @param {string} value - Specifies the value.\n * @param {number} containerSize - Specifies the container size.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisiblePointer} - Returns the pointer and axis index.\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\n/**\n * Function to convert the label using format for cirular gauge.\n *\n * @param {string} format - Specifies the format.\n * @returns {string} - Returns th string.\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n *\n * @param {GaugeLocation} location - Specifies the location.\n * @param {string} shape - Specifies the shape.\n * @param {Size} size - Specifies the size.\n * @param {string} url - Specifies the url.\n * @param {PathOption} options - Specifies the path option.\n * @returns {PathOption} - Returns the path.\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    var space;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +\n                    'L' + ' ' + x + ' ' + (y) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        _this['stroke-dasharray'] = border.dashArray;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Internal use of circular gauge location\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { setStyleAttribute } from '@syncfusion/ej2-base';\nimport { isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to set style to the element.\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {string} fill - Specifies the fill of the element.\n * @param {BorderModel} border - Specifies the border of the element.\n * @returns {void}\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to get the value from angle for circular gauge.\n *\n * @param {number} angle - Specifies the angle.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returs the number.\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisibleRange} - Returns the current point.\n * @private\n */\nexport function getRange(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString.split('Range_')[1]\n    };\n}\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n})(Theme || (Theme = {}));\n/**\n * @param {string} theme theme\n * @returns {string[]} palette\n * @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    switch (theme.toLowerCase()) {\n        case 'tailwind':\n            palette = ['#0369A1', '#14B8A6', '#15803D', '#334155', '#5A61F6',\n                '#65A30D', '#8B5CF6', '#9333EA', '#F59E0B', '#F97316'];\n            break;\n        case 'tailwinddark':\n            palette = ['#10B981', '#22D3EE', '#2DD4BF', '#4ADE80', '#8B5CF6',\n                '#E879F9', '#F472B6', '#F87171', '#F97316', '#FCD34D'];\n            break;\n        case 'bootstrap5':\n            palette = ['#262E0B', '#668E1F', '#AF6E10', '#862C0B', '#1F2D50',\n                '#64680B', '#311508', '#4C4C81', '#0C7DA0', '#862C0B'];\n            break;\n        case 'bootstrap5dark':\n            palette = ['#5ECB9B', '#A860F1', '#EBA844', '#557EF7', '#E9599B',\n                '#BFC529', '#3BC6CF', '#7A68EC', '#74B706', '#EA6266'];\n            break;\n        case 'fluent':\n            palette = ['#614570', '#4C6FB1', '#CC6952', '#3F579A', '#4EA09B',\n                '#6E7A89', '#D4515C', '#E6AF5D', '#639751', '#9D4D69'];\n            break;\n        case 'fluentdark':\n            palette = ['#8AB113', '#2A72D5', '#43B786', '#584EC6', '#E85F9C',\n                '#6E7A89', '#EA6266', '#EBA844', '#26BC7A', '#BC4870'];\n            break;\n    }\n    return palette;\n}\n/**\n * Function to get ThemeStyle\n *\n * @param {GaugeTheme} theme theme\n * @returns {IThemeStyle} style\n * @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                labelColor: '#6B7280',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                labelColor: '#9CA3AF',\n                lineColor: '#374151',\n                majorTickColor: '#6B7280',\n                minorTickColor: '#6B7280',\n                pointerColor: '#9CA3AF',\n                capColor: '#9CA3AF',\n                needleColor: '#9CA3AF',\n                needleTailColor: '#9CA3AF',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#343A40',\n                tooltipFillColor: '#212529',\n                tooltipFontColor: '#F9FAFB',\n                labelColor: '#495057',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5dark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#E9ECEF',\n                tooltipFillColor: '#E9ECEF',\n                tooltipFontColor: '#212529',\n                labelColor: '#CED4DA',\n                lineColor: '#343A40',\n                majorTickColor: '#6C757D',\n                minorTickColor: '#6C757D',\n                pointerColor: '#ADB5BD',\n                capColor: '#ADB5BD',\n                needleColor: '#ADB5BD',\n                needleTailColor: '#ADB5BD',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'fluent':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#201F1E',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#323130',\n                labelColor: '#3B3A39',\n                lineColor: '#EDEBE9',\n                majorTickColor: '#C8C6C4',\n                minorTickColor: '#C8C6C4',\n                pointerColor: '#A19F9D',\n                capColor: '#A19F9D',\n                needleColor: '#A19F9D',\n                needleTailColor: '#A19F9D',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '600'\n            };\n            break;\n        case 'fluentdark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#F3F2F1',\n                tooltipFillColor: '#252423',\n                tooltipFontColor: '#F3F2F1',\n                labelColor: '#C8C6C4',\n                lineColor: '#292827',\n                majorTickColor: '#484644',\n                minorTickColor: '#484644',\n                pointerColor: '#797775',\n                capColor: '#797775',\n                needleColor: '#797775',\n                needleTailColor: '#797775',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '600'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n    }\n    return style;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Tooltip Helper methods\n */\nimport { GaugeLocation, getTemplateFunction, Size } from './helper-common';\nimport { remove } from '@syncfusion/ej2-base';\n/**\n * Function to get the mouse position\n *\n * @param {number} pageX - Specifies the pageX value.\n * @param {number} pageY - Specifies the pageY value.\n * @param {Element} element - Specifies the element.\n * @returns {GaugeLocation} - Returns the location.\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = getTemplateFunction(template, gauge);\n    var tooltipData = templateFn ? (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n        : templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n            : templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge axis-panel Helper methods\n */\n/**\n * Function to calculate the sum of array values.\n *\n * @param {number} from - Specifies the from value.\n * @param {number} to - Specifies the to value.\n * @param {number[]} values - Specifies the number.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge axis-render Helper methods\n */\n/**\n * Function to get range color from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {Range[]} ranges - Specifies the ranges.\n * @param {string} color - Specifies the color.\n * @returns {string} - Returns the color.\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge pointer-render Helper methods\n */\nimport { getLocationFromAngle, isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to calculate the value for linear animation effect\n *\n * @param {number} currentTime - Specifies the currentTime.\n * @param {number} startValue - Specifies the startValue.\n * @param {number} endValue - Specifies the endValue.\n * @param {number} duration - Specifies the duration.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} start - Specifies the start value.\n * @param {number} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {boolean} checkMinValue - Specifies the checkMinValue value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= isCompleteAngle(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Common Helper methods\n */\nimport { measureText } from '../utils/helper-common';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the label.\n * @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * @param {string} text - Specifies the text.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @param {number} areaWidth - Specifies the area width.\n * @param {string} id - Specifies the id.\n * @param {Element} element - Specifies the element.\n * @returns {void}\n * @private */\nexport function showTooltip(text, x, y, areaWidth, id, element) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    var tooltip = document.getElementById(id);\n    var width = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    }).width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            innerHTML: text,\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"'\n        });\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerHTML = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Sets and gets the options to customize the color and width of the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Border.prototype, \"dashArray\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the font style for the circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to customize the tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * Sets and gets the options to customize the tooltip for annotation in circular gauge.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Sets and gets the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the tooltip of the circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/member-delimiter-style */\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the axis line in circular gauge component.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Sets and gets the axis label in circular gauge component.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    __decorate([\n        Property(true)\n    ], Label.prototype, \"shouldMaintainPadding\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Sets and gets the option to customize the ranges of an axis in circular gauge component.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isLinearCircularGradient = false;\n        return _this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Range.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radialGradient\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Sets and gets the major and minor tick lines of an axis in circular gauge component.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property('0')\n    ], Tick.prototype, \"dashArray\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Sets and gets the needle cap of pointer in circular gauge component.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"radialGradient\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Sets and gets the pointer needle in the circular gauge component.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"radialGradient\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Sets and gets the animation of pointers in circular gauge component.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Sets and gets the annotation element for an axis in circular gauge component.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Sets and gets the pointers of an axis in circular gauge component.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Pointer.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Pointer.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property('')\n    ], Pointer.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleStartWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleEndWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radialGradient\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Sets and gets the options to customize the axis for the circular gauge component.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Sets and gets the minimum value of an axis in the circular gauge component.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { getTemplateFunction, getElement, stringToNumber, getFontStyle, getLocationFromAngle, removeElement } from '../utils/helper-common';\nimport { annotationRender } from '../model/constants';\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var width = this.gauge.availableSize.width;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        if (!isNullOrUndefined(document.getElementById(this.elementId + '_Secondary_Element'))) {\n            document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';\n        }\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.gauge.renderReactTemplates();\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var _this = this;\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        this.gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn;\n            var templateElement;\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content, _this.gauge);\n                if (templateFn && templateFn(axis, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length) {\n                    templateElement = Array.prototype.slice.call(templateFn(axis, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    childElement.appendChild(createElement('div', {\n                        innerHTML: argsData.content,\n                        id: 'StringTemplate',\n                        styles: getFontStyle(argsData.textStyle)\n                    }));\n                }\n                _this.updateLocation(childElement, axis, annotation);\n                element.appendChild(childElement);\n                var parentElement = document.getElementById(_this.elementId + '_Secondary_Element');\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Annotation} annotation - Specifies the annotation.\n     * @returns {void}\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = this.measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    /**\n    * Function to measure the element rect.\n    *\n    * @param {HTMLElement} element - Specifies the html element.\n    * @returns {ClientRect} - Returns the client rect.\n    * @private\n    */\n    Annotations.prototype.measureElementRect = function (element) {\n        document.body.appendChild(element);\n        var bounds = element.getBoundingClientRect();\n        removeElement(element.id);\n        return bounds;\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","/**\n * Specifies the gauge constant value\n */\n/**\n * Sets and gets loaded event name in the circular gauge component.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Sets and gets load event name in the circular gauge component.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Sets and gets animation complete event name in the circular gauge component.\n *\n * @private\n */\nexport var animationComplete = 'animationComplete';\n/**\n * Sets and gets axis label render event name in the circular gauge component.\n *\n * @private\n */\nexport var axisLabelRender = 'axisLabelRender';\n/**\n * Sets and gets radius calculate event name in the circular gauge component.\n *\n * @private\n */\nexport var radiusCalculate = 'radiusCalculate';\n/**\n * Sets and gets tooltip render event name in the circular gauge component.\n *\n * @private\n */\nexport var tooltipRender = 'tooltipRender';\n/**\n * Sets and gets annotation render event name in the circular gauge component.\n *\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Sets and gets gauge mouse move event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/**\n * Sets and gets gauge mouse leave event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/**\n * Sets and gets gauge mouse down event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/**\n * Sets and gets gauge mouse up event name in circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/**\n * Sets and gets drag start event name in the circular gauge component.\n *\n * @private\n */\nexport var dragStart = 'dragStart';\n/**\n * Sets and gets drag move event name in the circular gauge component.\n *\n * @private\n */\nexport var dragMove = 'dragMove';\n/**\n * Sets and gets drag end event name in the circular gauge component.\n *\n * @private\n */\nexport var dragEnd = 'dragEnd';\n/**\n * Sets and gets resize event name in the circular gauge component.\n *\n * @private\n */\nexport var resized = 'resized';\n/**\n * Sets and gets before print event name in the circular gauge component.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Sets and gets pointer start event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerStart = 'pointerStart';\n/**\n * Sets and gets pointer move event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerMove = 'pointerMove';\n/**\n * Sets and gets pointer end event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerEnd = 'pointerEnd';\n/**\n * Sets and gets range start event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeStart = 'rangeStart';\n/**\n * Sets and gets range move event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeMove = 'rangeMove';\n/**\n * Sets and gets range end event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeEnd = 'rangeEnd';\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { stringToNumber, getAngleFromValue, getLocationFromAngle, getPointer, getLabelFormat, Rect } from '../utils/helper-common';\nimport { getMousePosition, getElementSize } from '../utils/helper-tooltip';\nimport { Browser, createElement, remove } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Sets and gets the module that handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = {\n            color: this.tooltip.textStyle.color, opacity: this.tooltip.textStyle.opacity,\n            fontFamily: this.tooltip.textStyle.fontFamily, fontStyle: this.tooltip.textStyle.fontStyle,\n            fontWeight: this.tooltip.textStyle.fontWeight, size: this.tooltip.textStyle.size\n        };\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        var isTooltipRender = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            isTooltipRender = true;\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent_1 = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var pointerTooltip = function (tooltipArgs) {\n                var template = tooltipArgs.tooltip.template;\n                if (template !== null && template.length === 1) {\n                    template = template[template[0]];\n                }\n                if (!tooltipArgs.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location, true) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location, false);\n                    }\n                }\n                else {\n                    tooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs.cancel && !samePointerEle) {\n                    _this.textStyle.color = tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor;\n                    _this.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily || tooltipArgs.tooltip.textStyle.fontFamily;\n                    _this.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        tooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, _this.textStyle, tooltipArgs.tooltip.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (template && (_this.tooltipPosition === 'LeftTop' || _this.tooltipPosition === 'LeftBottom')) {\n                        _this.tooltipEle.style.left = (parseFloat(_this.tooltipEle.style.left) - _this.tooltipEle.getBoundingClientRect().width - 20) + 'px';\n                    }\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs, pointerTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_2 = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle_1 = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData_1 = (this.currentRange.start).toString();\n            var endData_1 = (this.currentRange.end).toString();\n            var rangeContent_1 = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||\n                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||\n                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'\n            };\n            var rangeTooltipTextStyle_1 = { color: this.gauge.tooltip.rangeSettings.textStyle.color, opacity: this.gauge.tooltip.rangeSettings.textStyle.opacity,\n                fontFamily: this.gauge.tooltip.rangeSettings.textStyle.fontFamily, fontStyle: this.gauge.tooltip.rangeSettings.textStyle.fontStyle,\n                fontWeight: this.gauge.tooltip.rangeSettings.textStyle.fontWeight, size: this.gauge.tooltip.rangeSettings.textStyle.size\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeTooltip = function (rangeTooltipArgs) {\n                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n                if (rangeTemplate !== null && rangeTemplate.length === 1) {\n                    rangeTemplate = rangeTemplate[rangeTemplate[0]];\n                }\n                if (rangeTemplate) {\n                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);\n                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);\n                }\n                if (!_this.tooltip.rangeSettings.showAtMousePosition) {\n                    if (rangeTemplate) {\n                        var elementSize = getElementSize(rangeTemplate, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location, true) : rect_2;\n                    }\n                    else {\n                        _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location, false);\n                    }\n                }\n                else {\n                    rangeTooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_2;\n                }\n                if (!rangeTooltipArgs.cancel) {\n                    rangeTooltipTextStyle_1.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    rangeTooltipTextStyle_1.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily;\n                    rangeTooltipTextStyle_1.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipTextStyle_1, rangeTooltipArgs.tooltip.rangeSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (rangeTemplate && (_this.tooltipPosition === 'LeftTop' || _this.tooltipPosition === 'LeftBottom')) {\n                        _this.tooltipEle.style.left = (parseFloat(_this.tooltipEle.style.left) - _this.tooltipEle.getBoundingClientRect().width - 20) + 'px';\n                    }\n                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs, rangeTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var annotationAxisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_3 = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipElement();\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,\n                type: 'Annotation'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var annotationTooltip = function (annotationTooltipArgs) {\n                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n                if (annotationTemplate !== null && annotationTemplate.length === 1) {\n                    annotationTemplate = annotationTemplate[annotationTemplate[0]];\n                }\n                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();\n                _this.tooltipPosition = 'RightTop';\n                _this.arrowInverted = true;\n                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n                _this.tooltipRect = new Rect(rect_3.x, rect_3.y, rect_3.width, rect_3.height);\n                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||\n                    _this.gauge.tooltip.annotationSettings.template !== null)) {\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.color = annotationTooltipArgs.tooltip.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        annotationTooltipArgs.tooltip.textStyle.fontFamily;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        annotationTooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTooltipArgs.tooltip.annotationSettings.textStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs, annotationTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else {\n            var isTooltipRemoved = this.removeTooltip();\n            if (isTooltipRemoved) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this.gauge.clearTemplate();\n            }\n        }\n        var gaugeElement = document.getElementById(this.gaugeId);\n        var gaugeRect = gaugeElement.getBoundingClientRect();\n        var tooltipRect = isTooltipRender ? this.tooltipEle.getBoundingClientRect() : null;\n        if (isTooltipRender && this.tooltipEle.offsetLeft < 0 && (tooltipRect.left - gaugeRect.left) < 0) {\n            var tooltipLeft = this.tooltipEle.style.left.split(\"px\")[0];\n            this.tooltipEle.style.left = parseInt(tooltipLeft) + (gaugeRect.left - tooltipRect.left) + 'px';\n        }\n        if (isTooltipRender && tooltipRect.top < 0) {\n            this.tooltipEle.style.top = 0 + 'px';\n        }\n    };\n    /**\n     * Method to create tooltip svg element.\n     *\n     * @param {Tooltip} svgTooltip - Specifies the tooltip element.\n     * @param {ITooltipRenderEventArgs} tooltipArg - Specifies the tooltip arguments.\n     * @param {string} template - Specifies the tooltip template.\n     * @param {boolean} arrowInverted - Specifies the boolean value.\n     * @param {Rect} tooltipRect - Specifies the rect element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @param {string} fill - Spcifies the fill color of the tooltip.\n     * @param {FontModel} textStyle - Spcifies the text style of the tooltip.\n     * @param {BorderModel} border - Specifies the border of the tooltip.\n     * @returns {Tooltip} - Returns the tooltip.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        svgTooltip = new Tooltip({\n            enable: true,\n            data: { value: tooltipArg.content },\n            template: template,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [tooltipArg.content],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: border\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if ((gauge.isVue || gauge.isVue3)) {\n            svgTooltip.controlInstance = gauge;\n        }\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     *\n     * @returns {void}\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip',\n                styles: 'position: absolute;pointer-events:none;'\n            });\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    /**\n     * Method to get parent annotation element.\n     *\n     * @param {Element} child - Specifies the annotation element.\n     * @returns {boolean} - Returns the boolean value.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     *\n     * @param {number} currentValue - Specifies the current value.\n     * @returns {number} - Returns the round number.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     *\n     * @param {Rect} rect - Specifies the rect element.\n     * @param {number} angle - Specifies the angle.\n     * @param {string} text - Specifies the text.\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {boolean} template - whether it is template or not .\n     * @returns {Rect} - Returns the rect element.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location, isTemplate) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        var padding = 10;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = isTemplate ? true : isTemplate;\n                addTop = (angle >= 150 && angle <= 160 && isTemplate) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - location.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x + padding, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x - padding : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        var isTooltipRemoved = false;\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n                isTooltipRemoved = true;\n            }\n            this.pointerEle = null;\n        }\n        return isTooltipRemoved;\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.gauge.element.addEventListener('contextmenu', this.removeTooltip);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { stringToNumber, toPixel, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getPathArc, getRoundedPathArc, getDegree, isCompleteAngle, PathOption, TextOption } from '../utils/helper-common';\nimport { getRangeColor } from '../utils/helper-axis-renderer';\nimport { getRangePalette } from '../model/theme';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to check the angles.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.checkAngles = function (axis) {\n        axis.startAngle = axis.startAngle >= 360 ? 360 : axis.startAngle <= -360 ? -360 : axis.startAngle;\n        axis.endAngle = axis.endAngle >= 360 ? 360 : axis.endAngle <= -360 ? -360 : axis.endAngle;\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0 && this.gauge.allowComponentRender) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var checkLabelOpposed = 0;\n        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&\n            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&\n            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?\n            axis.lineStyle.width + axis.currentRadius / 20 :\n            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);\n        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else if (style.position === 'Cross') {\n            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, style, lastTextHeight, lastLabelAnchor, lastLabelAngle);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, style, currentTextHeight, anchor, angle);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, style, textHeight, anchor, angle);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            style.font.fontFamily = style.font.fontFamily || this.gauge.themeStyle.labelFontFamily;\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     *\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} angle - Specifies the angle.\n     * @param {VisibleLabels} label - Specifies the labels.\n     * @returns {string} - Returns the anchor.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     *\n     * @param {GaugeLocation} previousLocation - Specifies the previous location.\n     * @param {number} previousWidth - Specifies the previous width.\n     * @param {number} previousHeight - Specifies the previous height.\n     * @param {GaugeLocation} currentLocation - Specifies the current location.\n     * @param {number} currentWidth - Specifies the current width.\n     * @param {number} currentHeight - Specifies the current height.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||\n            ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     *\n     * @param {GaugeLocation} actualLocation - Specifies the actual location.\n     * @param {number} textWidth - Specifies the text width.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} textHeight - Specifies the text height.\n     * @param {string} anchorPosition - Specifies the anchor position.\n     * @param {number} angle - Specifies the angle.\n     * @returns {GaugeLocation} - Returns the gauge location.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, style, textHeight, anchorPosition, angle) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     *\n     * @param {number} angle - Specifies the angle.\n     * @param {number} size - Specifies the size.\n     * @returns {number} - Returns the fineal size.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     *\n     * @param {number} value - Specifies the value.\n     * @param {Tick} options - Specifies the options.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth) +\n            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the range path of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Range} range - Specifies the range.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    /* eslint-disable @typescript-eslint/dot-notation */\n    AxisRenderer.prototype.drawRangePath = function (axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, colorIndex) {\n        var startValue;\n        var direction;\n        var endValue;\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        var gradientRangeColor;\n        if (range.isLinearCircularGradient) {\n            var rangeSplitValue = ((range.end - range.start) / range.linearGradient.colorStop.length);\n            var rangeStart = range.linearGradient.colorStop.length > 1 ?\n                (range.start + (rangeSplitValue * (colorIndex))) : range.start;\n            var rangeEnd = range.linearGradient.colorStop.length > 1 ? (rangeStart + rangeSplitValue) : range.end;\n            startValue = Math.min(Math.max(rangeStart, min), rangeEnd);\n            endValue = Math.min(Math.max(rangeStart, rangeEnd), max);\n        }\n        else {\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n        }\n        startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        var isAngleCross360 = (startAngle > endAngle);\n        if (axis.rangeGap != null && axis.rangeGap > 0 && range.start !== range.end\n            || (!isNullOrUndefined(range.linearGradient) && !range.isLinearCircularGradient\n                && (colorIndex === range.linearGradient.colorStop.length - 1))) {\n            startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle :\n                colorIndex === 0 && range.isLinearCircularGradient ? axis.direction === 'AntiClockWise' ?\n                    startAngle - (axis.rangeGap / Math.PI) :\n                    startAngle + (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient\n                    ? (axis.direction === 'AntiClockWise' ? startAngle - (axis.rangeGap / Math.PI) : startAngle + (axis.rangeGap / Math.PI)) : startAngle;\n            endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle :\n                !isNullOrUndefined(range.linearGradient) && colorIndex === range.linearGradient.colorStop.length - 1\n                    && range.isLinearCircularGradient ?\n                    axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) :\n                        endAngle - (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient ?\n                    (axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) : endAngle - (axis.rangeGap / Math.PI)) : endAngle;\n        }\n        if (this.gauge.allowComponentRender) {\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle)) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = typeof range.roundedCornerRadius === 'string' ? parseFloat(range.roundedCornerRadius) : range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                var degreeValue = getDegree(startAngle, endAngle);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                if (roundedStartAngle > roundedEndAngle && (roundedStartAngle - roundedEndAngle) <= radius) {\n                    roundedStartAngle = startAngle;\n                    roundedEndAngle = endAngle;\n                }\n                if (this.gauge.gradientModule && ((!isNullOrUndefined(range.linearGradient)\n                    && !isNullOrUndefined(range.linearGradient.colorStop)) || (!isNullOrUndefined(range.radialGradient)\n                    && !isNullOrUndefined(range.radialGradient.colorStop)))) {\n                    if (range.isLinearCircularGradient) {\n                        endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                        var degree = getDegree(startAngle, endAngle);\n                        var rangeColorLength = range.linearGradient.colorStop.length;\n                        var degreeRange = ((axis.startAngle === axis.endAngle ?\n                            (axis.startAngle === 0 && axis.endAngle === 0 ? 360 : axis.startAngle) :\n                            (axis.endAngle - axis.startAngle)) - degree * (rangeColorLength - 1));\n                        var degreeRangeValue = void 0;\n                        if (degreeRange <= 360 && degreeRange >= 270) {\n                            degreeRangeValue = 270;\n                        }\n                        else if (degreeRange <= 270 && degreeRange >= 180) {\n                            degreeRangeValue = 180;\n                        }\n                        else if (degreeRange <= 180 && degreeRange >= 90) {\n                            degreeRangeValue = 90;\n                        }\n                        else if (degreeRange <= 90 && degreeRange >= 0) {\n                            degreeRangeValue = 0;\n                        }\n                        var gradientDegree = axis.direction === 'AntiClockWise' ?\n                            (axis.startAngle === axis.endAngle ? 0 : axis.startAngle) + degree * ((rangeColorLength - 1) - colorIndex)\n                            : axis.startAngle + degree * (colorIndex);\n                        var gradientAngle = axis.startAngle < axis.endAngle ? axis.direction === 'AntiClockWise'\n                            ? axis.ranges.length > 1 ? rangeIndex === 0 ? (360 - (axis.startAngle\n                                + (degree * (colorIndex)))) : (axis.startAngle + (degree * (colorIndex + 1))) :\n                                axis.startAngle + (degreeRangeValue + degree * ((rangeColorLength - 1) - colorIndex)) : axis.startAngle\n                            + (degree * (colorIndex)) : axis.endAngle === 360 || axis.startAngle === axis.endAngle\n                            ? axis.direction === 'AntiClockWise' ? axis.startAngle === axis.endAngle ?\n                                (axis.startAngle === 0 && axis.endAngle === 0 ? 0 : 360) - axis.startAngle +\n                                    degreeRangeValue + (degree * ((rangeColorLength - 1) - colorIndex))\n                                : degree * ((rangeColorLength - 1) - colorIndex) : degree * (colorIndex) :\n                            gradientDegree < 360 ? gradientDegree : gradientDegree - 360;\n                        range.gradientAngle = rangeIndex === 0 ? axis.rangeGap ? gradientAngle + axis.rangeGap\n                            : gradientAngle : axis.rangeGap > 0 ? axis.ranges[rangeIndex - 1]['gradientAngle'] + axis.rangeGap\n                            : axis.ranges[rangeIndex - 1]['gradientAngle'];\n                        if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                            ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                            range.gradientAntiAngle = gradientAngle;\n                        }\n                        if (rangeIndex !== 0) {\n                            gradientAngle = axis.direction === 'AntiClockWise' ? axis.ranges.length > 1 ?\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] - gradientAngle + axis.startAngle :\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] + gradientAngle :\n                                range.gradientAngle + gradientAngle - axis.startAngle;\n                            range.gradientAngle = axis.rangeGap != null && axis.rangeGap > 0 ? colorIndex === rangeColorLength - 1 ?\n                                gradientAngle + axis.ranges[rangeIndex - 1]['gradientAngle'] : gradientAngle : gradientAngle;\n                            if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                                ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                                range.gradientAntiAngle = gradientAngle;\n                            }\n                        }\n                        if (gradientAngle > 45 && gradientAngle <= 115\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) <= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'bottom' : 'top';\n                        }\n                        else if (gradientAngle > 115 && gradientAngle < 170) {\n                            direction = axis.direction === 'AntiClockWise' ? 'left' : 'right';\n                        }\n                        else if (gradientAngle >= 170 && gradientAngle <= 280) {\n                            direction = axis.direction === 'AntiClockWise' ? 'top' : 'bottom';\n                        }\n                        else if (gradientAngle > 280 && gradientAngle <= 360\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) >= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'right' : 'left';\n                        }\n                    }\n                    gradientRangeColor = this.gauge.gradientModule.getGradientColorString(range, colorIndex, direction, rangeIndex);\n                }\n                range.rangeColor = gradientRangeColor ? gradientRangeColor : range.rangeColor;\n                if (range.roundedCornerRadius) {\n                    if (range.isLinearCircularGradient && range.linearGradient.colorStop.length > 1) {\n                        if (colorIndex === 0 || colorIndex === range.linearGradient.colorStop.length - 1) {\n                            if (axis.direction === 'ClockWise') {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex !== 0 ? Math.ceil(roundedEndAngle) : Math.ceil(endAngle)), ((colorIndex === range.linearGradient.colorStop.length - 1) ? startAngle : oldStart), (colorIndex !== 0 ? oldEnd : endAngle), location, colorIndex);\n                            }\n                            else {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === 0 ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.ceil(endAngle) : Math.ceil(roundedEndAngle)), ((colorIndex === 0) ? startAngle : oldStart), (colorIndex === range.linearGradient.colorStop.length - 1 ? endAngle : oldEnd), location, colorIndex);\n                            }\n                        }\n                        else {\n                            this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                        }\n                    }\n                    else {\n                        this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, location, colorIndex);\n                    }\n                }\n                else {\n                    this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                }\n            }\n            else if ((range.start === range.end) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n            }\n        }\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} roundedStartAngle - Specifies the rounded path of the start angle.\n     * @param {number} roundedEndAngle - Specifies the rounded path of the end angle.\n     * @param {number} oldStart - Specifies the rounded path of the old start value.\n     * @param {number} oldEnd - Specifies the rounded path of the old end value..\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.roundedRangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, location, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption((!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex\n            : this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex + '_Circular_' + colorIndex), range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} startAngle - Specifies the rounded path of the start angle.\n     * @param {number} endAngle - Specifies the rounded path of the end angle.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.rangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, startAngle, endAngle, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption(!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex : this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex + '_Circular_' + colorIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(this.gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element) {\n        var _this = this;\n        var ele = (document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index));\n        var rangeElement = (ele) ? document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index) :\n            this.gauge.renderer.createGroup({ id: this.gauge.element.id + '_Axis_Ranges_' + index });\n        var startWidth;\n        var startEndDifference;\n        var endWidth;\n        var previousEndWidth;\n        var previousStartWidth;\n        axis.ranges.map(function (range, rangeIndex) {\n            range.isLinearCircularGradient = !isNullOrUndefined(_this.gauge.gradientModule)\n                && !isNullOrUndefined(range.linearGradient) && isNullOrUndefined(range.linearGradient.startValue)\n                && isNullOrUndefined(range.linearGradient.endValue) && !isNullOrUndefined(range.linearGradient.colorStop);\n            range.pathElement = [];\n            if (!isNullOrUndefined(range.offset) && range.offset.length > 0) {\n                range.currentDistanceFromScale = stringToNumber(range.offset, axis.currentRadius);\n            }\n            else {\n                range.currentDistanceFromScale = range.offset;\n            }\n            _this.calculateRangeRadius(axis, range);\n            if (range.startWidth.length > 0) {\n                startWidth = toPixel(range.startWidth, range.currentRadius);\n            }\n            else {\n                startWidth = range.startWidth;\n            }\n            if (range.endWidth.length > 0) {\n                endWidth = toPixel(range.endWidth, range.currentRadius);\n            }\n            else {\n                endWidth = range.endWidth;\n            }\n            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);\n            if (range.isLinearCircularGradient) {\n                for (var i = 0; i < range.linearGradient.colorStop.length; i++) {\n                    if (i <= (range.linearGradient.colorStop.length - 1)) {\n                        previousEndWidth = i === 0 ? endWidth : previousEndWidth;\n                        previousStartWidth = i === 0 ? startWidth : previousStartWidth;\n                        startEndDifference = (Math.abs(previousStartWidth - previousEndWidth) / (range.linearGradient.colorStop.length));\n                        if (i > 0) {\n                            startWidth = endWidth;\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                        else {\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                    }\n                    else {\n                        startWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                            : startWidth + startEndDifference;\n                        endWidth = (previousEndWidth);\n                    }\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, i);\n                }\n            }\n            else {\n                if (!(range.start === range.end && axis.direction === 'AntiClockWise' && axis.startAngle === axis.endAngle)) {\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, null);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     *\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {\n        var actualRadius = !isNullOrUndefined(range.position) && range.position !== 'Auto' && isNullOrUndefined(range.radius) ?\n            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :\n                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :\n                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;\n        return actualRadius;\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getRoundedPathArc, calculateShapes, PathOption, Size, TextOption } from '../utils/helper-common';\nimport { linear, getCompleteArc } from '../utils/helper-pointer-renderer';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {boolean} animate - Specifies the boolean value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        if (this.gauge.allowComponentRender) {\n            axis.pointers.map(function (pointer, pointerIndex) {\n                if (!isNullOrUndefined(pointer.offset) && pointer.offset.length > 0) {\n                    pointer.currentDistanceFromScale = stringToNumber(pointer.offset, axis.currentRadius);\n                }\n                else {\n                    pointer.currentDistanceFromScale = pointer.offset;\n                }\n                range = axis.visibleRange;\n                pointer.pathElement = [];\n                _this.calculatePointerRadius(axis, pointer);\n                childElement = gauge.renderer.createGroup({\n                    id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n                });\n                _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n                _this.setPointerValue(axis, pointer, pointer.currentValue);\n                pointerElement.appendChild(childElement);\n                if (animate || pointer.animation.enable) {\n                    _this.doPointerAnimation(pointer, axis);\n                }\n            });\n            element.appendChild(pointerElement);\n        }\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     *\n     * @returns {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = !isNullOrUndefined(pointer.radius) ?\n            stringToNumber(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?\n            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));\n    };\n    /**\n     * Measure the pointer length of the circular gauge based on pointer position.\n     *\n     * @returns {number}\n     */\n    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {\n        if (pointer.markerShape === 'Text') {\n            var pointerRadius = void 0;\n            var pointerSize = parseInt(pointer.textStyle.size, 10);\n            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset +\n                        pointer.currentDistanceFromScale) :\n                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);\n            return pointerRadius;\n        }\n        else {\n            var pointerRadius = void 0;\n            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;\n            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||\n                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :\n                pointer.markerWidth / 2) : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -\n                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));\n            return pointerRadius;\n        }\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var needle = pointer.needleTail;\n        var cap = pointer.cap;\n        var pointerRadius;\n        var location;\n        var direction;\n        var needleStartWidth = pointer.needleStartWidth;\n        var needleEndWidth = pointer.needleEndWidth;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        var gradientColor;\n        var gradientTailColor;\n        var gradientCapColor;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {\n            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';\n        }\n        else {\n            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + location.x + ' ' + (mid.y + needleStartWidth) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';\n        }\n        if (gauge.gradientModule) {\n            gradientColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, gradientColor ? gradientColor :\n            pointer.color || this.gauge.themeStyle.needleColor, pointer.border.width, pointer.border.color, null, pointer.border.dashArray, direction), parentElement, gauge));\n        // eslint-disable-next-line prefer-const\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (gauge.gradientModule) {\n            gradientTailColor = gauge.gradientModule.getGradientColorString(needle);\n        }\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, gradientTailColor ? gradientTailColor : pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, pointer.needleTail.border.dashArray, direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (gauge.gradientModule) {\n            gradientCapColor = gauge.gradientModule.getGradientColorString(cap);\n        }\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, gradientCapColor ? gradientCapColor : pointer.cap.color || this.gauge.themeStyle.capColor, pointer.cap.border.width, pointer.cap.border.color, null, pointer.cap.border.dashArray, '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var _this = this;\n        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle && !checkMinValue ? [startAngle, startAngle = endAngle - 1][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            // eslint-disable-next-line no-constant-condition\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        var oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        var roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (roundStartAngle > roundEndAngle && (roundStartAngle - roundEndAngle) <= radius && pointer.type === 'RangeBar') {\n            roundStartAngle = startAngle;\n            roundEndAngle = endAngle;\n        }\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value && !checkMinValue) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));\n                }\n            }\n            else {\n                if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                    var textangle = getAngleFromValue(pointer.value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n                    var textlocation = getLocationFromAngle((pointer.markerShape === 'Text') ? textangle : 0, pointer.currentRadius, _this.gauge.midPoint);\n                    element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n                    element.setAttribute('x', String(textlocation.x));\n                    element.setAttribute('y', String(textlocation.y));\n                }\n                else {\n                    element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n                }\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var gradientMarkerColor;\n        var angle = Math.round(getAngleFromValue(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n        var shapeBasedOnPosition = pointer.markerShape;\n        if (gauge.gradientModule) {\n            gradientMarkerColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        if (isNullOrUndefined(pointer.radius) && !isNullOrUndefined(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||\n            pointer.markerShape === 'Triangle')) {\n            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?\n                'InvertedTriangle' : (pointer.position === 'Inside' &&\n                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));\n        }\n        var location = getLocationFromAngle((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);\n        if (pointer.markerShape === 'Text') {\n            var textOption = new TextOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +\n                (location.x) + ',' + location.y + ')', 'auto');\n            textElement(textOption, pointer.textStyle, pointer.textStyle.color, parentElement, 'pointer-events : auto; ');\n        }\n        else {\n            pointer.pathElement.push(appendPath(calculateShapes(location, shapeBasedOnPosition, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, gradientMarkerColor ? gradientMarkerColor : pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, pointer.border.dashArray, '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n        }\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var gradientBarColor;\n        if (gauge.gradientModule) {\n            gradientBarColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, gradientBarColor ? gradientBarColor :\n            pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, pointer.border.dashArray, ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     *\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = !isNullOrUndefined(pointer.previousValue) ? pointer.previousValue : axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element\n     * @param {number} start - Specifies the start\n     * @param {number} end - Specifies the end\n     * @param {Axis} axis - Specifies the axis\n     * @param {Pointer} pointer - Specifies the pointer\n     * @param {number} radius - Specifies the radius\n     * @param {number} innerRadius - Specifies the innerRadius\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                if (start !== end) {\n                    element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                        _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {number} start - Specifies the start.\n     * @param {number} end - Specifies the end.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} radius - Specifies the radius.\n     * @param {number} innerRadius - Specifies the innerRadius.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (roundRadius) {\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        // eslint-disable-next-line prefer-const\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { stringToNumber, measureText, getLocationFromAngle, getLabelFormat, VisibleLabels, isCompleteAngle, Size, Rect } from '../utils/helper-common';\nimport { calculateSum } from '../utils/helper-axis-panel';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar AxisLayoutPanel = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            // eslint-disable-next-line prefer-spread\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerXpoint) && isNullOrUndefined(this_1.gauge.centerYpoint)) {\n                var endAngle = void 0;\n                var startAngle = axis.startAngle;\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(0, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            startPoint : ((270 - startAngle) < (endAngle - 90)) ? endPoint : startPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                _this.calculateVisibleLabels(axis);\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Rect} rect - Specifies the rect.\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum !== null ? axis.maximum : 100);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        var allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum) && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n        if (!allowComponentRender) {\n            return 0;\n        }\n        else if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var interval = axis.visibleRange.interval;\n        var max = axis.visibleRange.max;\n        if ((isNullOrUndefined(axis.minimum) && isNullOrUndefined(axis.maximum)) || axis.minimum !== axis.maximum) {\n            var _loop_2 = function (i) {\n                roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n                argsData = {\n                    cancel: false, name: axisLabelRender, axis: axis,\n                    text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                        format(roundValue),\n                    value: roundValue\n                };\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var axisLabelRenderSuccess = function (argsData) {\n                    if (!argsData.cancel) {\n                        axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                    }\n                };\n                axisLabelRenderSuccess.bind(this_2);\n                this_2.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n            };\n            var this_2 = this;\n            for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {\n                _loop_2(i);\n            }\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (!isNullOrUndefined(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                }\n            };\n            axisLabelRenderSuccess.bind(this);\n            this.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var heightForCross;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        var labelPadding = 10;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?\n                axis.minorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?\n                axis.maxLabelSize.height / 2 : heightForCross;\n            lineSize = lineSize < heightForCross ? heightForCross : lineSize;\n            majorTickOffset = axis.majorTicks.offset;\n            minorTickOffset = axis.minorTicks.offset;\n            labelOffset = axis.labelStyle.offset;\n            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;\n            // Calculating the outer space of the axis\n            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&\n                axis.labelStyle.position === 'Outside') ? axisPadding : 0;\n            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +\n                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?\n                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?\n                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +\n                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?\n                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?\n                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            _this.gauge.allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum) && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n            renderer.checkAngles(axis);\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { removeElement, getElement, stringToNumber, measureText, textElement, appendPath, calculateShapes, PathOption, RectOption, Size, GaugeLocation, Rect, TextOption } from '../utils/helper-common';\nimport { textTrim, showTooltip } from '../utils/helper-legend';\nimport { Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Font, Border, Margin } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the location of the legend in circular gauge.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Sets and gets the options to customize the legend for the ranges in the circular gauge.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/*\n * Sets and gets the module to add the legend in the circular gauge.\n */\nvar Legend = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**\n         * @private\n         */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     *\n     * @param {Axis[]} axes - Specifies the axes.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     *\n     * @param {number} start - Specifies the start.\n     * @param {number} size - Specifies the size.\n     * @param {number} legendSize - Specifies the  legendSize.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @returns {number} - Returns the start value.\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     *\n     * @param {LegendPosition} position - Specifies the position.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @returns {void}\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     *\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds, redraw) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID, redraw);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            // starting shape center x,y position && to resolve lint error used new line for declaration\n            var start = new GaugeLocation(legendBounds.x + padding + (legend.shapeWidth / 2), legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.setAttribute('style', 'cursor: ' + ((!legend.toggleVisibility) ? 'auto' : 'pointer'));\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup, redraw);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     *\n     * @param {Rect} bounds - Specifies the bounds.\n     * @param {TextOption} textOption - Specifies the textOption.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @returns {void}\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = '#545454';\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.setAttribute('style', 'cursor: pointer');\n        }\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = '1/' + this.totalPages;\n        var pageTextElement = textElement(textOption, legend.textStyle, legend.textStyle.color || this.gauge.themeStyle.labelColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5), y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) +\n            padding + size.width)) + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     *\n     * @param {Element} pagingText - Specifies the pagingText.\n     * @param {number} page - Specifies the page.\n     * @param {number} pageNumber - Specifies the pageNumber.\n     * @returns {number} - Returns the size.\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            var pageLength = page * this.maxColumns;\n            size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = 'translate(-' + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = (pageNumber) + '/' + this.totalPages;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {TextOption} textOptions - Specifies the textOptions.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        legend.textStyle.fontFamily = legend.textStyle.fontFamily || this.gauge.themeStyle.labelFontFamily;\n        textOptions.text = legendOption.text;\n        textOptions.x = legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding;\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        var element = textElement(textOptions, legend.textStyle, fontcolor, group, '');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill : this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, legendOption.shapeBorder.dashArray, '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {GaugeLocation} start - Specifies the start.\n     * @param {number} textPadding - Specifies the textPadding.\n     * @param {LegendOptions} prevLegend - Specifies the prevLegend.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} count - Specifies the count.\n     * @param {number} firstLegend - Specifies the firstLegend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : this.maxColumnWidth);\n                legendOption.location.y = start.y;\n                this.pageXCollections.push(legendOption.location.x - (this.legend.shapeWidth / 2) - padding);\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            var previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n            if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width, this.legendBounds.x);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To show or hide the legend on clicking the legend.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled = !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     *\n     * @param {Index[]} toggledIndexes - Specifies the toggledIndexes.\n     * @returns {void}\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var count = 0;\n            for (var j = 0; j < toggledIndexes[i].rangeIndex; j++) {\n                var rangeStart = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].start;\n                var rangeEnd = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].end;\n                if (rangeStart == rangeEnd) {\n                    count++;\n                }\n            }\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'visible';\n                    shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex - count].fill);\n                    textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n                }\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'hidden';\n                    shapeElement.setAttribute('fill', hiddenColor);\n                    textElement_1.setAttribute('fill', hiddenColor);\n                }\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     *\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @param {LegendOptions[]} legendCollections - Specifies the legendCollections.\n     * @returns {LegendOptions} - Specifies the LegendOptions.\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     *\n     * @param {Event} event - Specifies the event.\n     * @param {boolean} pageUp - Specifies the pageUp.\n     * @returns {void}\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[0], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     *\n     * @param {number} tx - Specifies the tx value.\n     * @param {number} width - Specifies the width.\n     * @param {number} legendX - Specifies the legendX.\n     * @returns {number} - Returns the number.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width, legendX) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     *\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {string} id - Specifies the id.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {Element} - Returns the element.\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id, redraw) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        // eslint-disable-next-line max-len\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath, redraw);\n        legendItemsGroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     *\n     * @param {Element} parent - Specifies the element.\n     * @param {Element} childElement - Specifies the child element.\n     * @param {boolean} redraw - Specifies the boolean value.\n     * @param {boolean} isAnimate - Specifies the boolean value.\n     * @param {string} x - Specifies the x value.\n     * @param {string} y - Specifies the y value.\n     * @param {GaugeLocation} start - Specifies the start value.\n     * @param {string} direction - Specifies the direction.\n     * @param {boolean} forceAnimate - Specifies the boolean value.\n     * @param {boolean} isRect - Specifies the rect value.\n     * @param {Rect} previousRect - Specifies the previous rect value.\n     * @param {number} animateDuration - Specifies the animate duration.\n     * @returns {void}\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement, redraw, isAnimate, x, y, start, direction, forceAnimate, isRect, previousRect, animateDuration) {\n        if (isAnimate === void 0) { isAnimate = false; }\n        if (x === void 0) { x = 'x'; }\n        if (y === void 0) { y = 'y'; }\n        if (forceAnimate === void 0) { forceAnimate = false; }\n        if (isRect === void 0) { isRect = false; }\n        if (previousRect === void 0) { previousRect = null; }\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        var duration = animateDuration ? animateDuration : 300;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     *\n     * @param {LegendOptions[]} legendCollection - Specifies the legend collection.\n     * @returns {number} - Returns the count.\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     *\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /**\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} left - Specifies the left.\n     * @param {number} right - Specifies the right.\n     * @param {number} top - Specifies the top.\n     * @param {number} bottom - Specifies the bottom.\n     * @returns {Rect} - Returns the rect.\n     * @private\n     */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     *\n     * @param {number} computedWidth - Specifies compute width.\n     * @param {number} computedHeight - Specifies compute height.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legend bounds.\n     * @returns {void}\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n    };\n    /**\n     * To find maximum column size for legend\n     *\n     * @param {number[]} columns - Specifies the columns\n     * @param {number} width - Specifies the width\n     * @param {number} padding - Specifies the padding\n     * @param {number} rowWidth - Specifies the row width\n     * @returns {number} - Returns the number\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     *\n     * @param {Event} event - Specifies the event.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.move = function (event) {\n        var x = this.gauge.mouseX;\n        var y = this.gauge.mouseY;\n        var targetId = event.target.id;\n        if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1) {\n            var axisIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n            var rangeIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n            var text = '';\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legends = _a[_i];\n                if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                    text = legends.originalText;\n                }\n            }\n            showTooltip(text, x, y, this.gauge.element.offsetWidth, this.gauge.element.id + '_EJ2_Legend_Tooltip', getElement(this.gauge.element.id + '_Secondary_Element'));\n        }\n        else {\n            removeElement(this.gauge.element.id + '_EJ2_Legend_Tooltip');\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @param {CircularGauge} circulargauge - Specifies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (circulargauge) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n *\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","import { createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Represent the Pdf export for gauge\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PdfExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName Specfies the file name of the document.\n     * @param {PdfPageOrientation} orientation - Specfies the orientation of the PDF document to export the component.\n     * @param {boolean} allowDownload - Specfies whether to download the document or not.\n     * @returns {Promise<string>} - Returns the promise string\n     * @private\n     */\n    PdfExport.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = _this.control.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((_this.control.theme === 'Tailwind' || _this.control.theme === 'TailwindDark' || _this.control.theme === 'Bootstrap5' || _this.control.theme === 'Bootstrap5Dark'\n                || _this.control.theme === 'Fluent' || _this.control.theme === 'FluentDark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.\n                    drawImage(new PdfBitmap(imageString), 0, 0, _this.control.availableSize.width, _this.control.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @param {CircularGauge} gauge - Specfies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    PdfExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\n/**\n * Represent the Image Export for gauge\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function ImageExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the image file or not.\n     * @returns {Promise<string>} - Returns promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                _this.control.svgObject.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(_this.control.svgObject)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    _this.triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    ImageExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    /**\n    * To trigger the download element\n    *\n    * @param {string} fileName - Specifies the file name.\n    * @param {ExportType} type - Specifies the export type.\n    * @param {string} url - Specifies the url.\n    * @param {boolean} isDownload - Specifies the boolean value.\n    * @returns {void}\n    */\n    ImageExport.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { print as printWindow, createElement } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper-common';\nimport { beforePrint } from './constants';\n/**\n * Represent the print for gauge\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specifies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Print(control) {\n        this.control = control;\n    }\n    /**\n     * To print the gauge\n     *\n     * @param {string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the gauge\n     *\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {Element} - Returns the div element.\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print.\n     *\n     * @param {CircularGauge} gauge - Specfies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the color information for the gradient in the circular gauge.\n */\nvar ColorStop = /** @class */ (function (_super) {\n    __extends(ColorStop, _super);\n    function ColorStop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#000000')\n    ], ColorStop.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ColorStop.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('0%')\n    ], ColorStop.prototype, \"offset\", void 0);\n    __decorate([\n        Property('')\n    ], ColorStop.prototype, \"style\", void 0);\n    return ColorStop;\n}(ChildProperty));\nexport { ColorStop };\n/**\n * Specifies the position in percentage from which the radial gradient must be applied.\n */\nvar GradientPosition = /** @class */ (function (_super) {\n    __extends(GradientPosition, _super);\n    function GradientPosition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"x\", void 0);\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"y\", void 0);\n    return GradientPosition;\n}(ChildProperty));\nexport { GradientPosition };\n/**\n * This specifies the properties of the linear gradient colors for the circular gauge.\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"endValue\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], LinearGradient.prototype, \"colorStop\", void 0);\n    return LinearGradient;\n}(ChildProperty));\nexport { LinearGradient };\n/**\n * This specifies the properties of the radial gradient colors for the circular gauge.\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], RadialGradient.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"outerPosition\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"innerPosition\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], RadialGradient.prototype, \"colorStop\", void 0);\n    return RadialGradient;\n}(ChildProperty));\nexport { RadialGradient };\n/**\n * Sets and gets the module that enables the gradient option for pointers and ranges.\n *\n * @hidden\n */\nvar Gradient = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Gradient(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {name} name - Specifies the name of the gradient.\n     * @param {name} direction - Specifies the gradient position.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.calculateLinearGradientPosition = function (element, name, direction) {\n        var linearPosition = {\n            id: name,\n            x1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'right' ? '100%' : '0%')\n                : (!isNullOrUndefined(element.linearGradient.startValue) ? ((element.linearGradient.startValue.indexOf('%') === -1 ?\n                    element.linearGradient.startValue :\n                    parseFloat(element.linearGradient.startValue).toString()) + '%') : '0%')),\n            x2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1 ?\n                (direction === 'left' ? '100%' : '0%') :\n                (!isNullOrUndefined(element.linearGradient.endValue) ? ((element.linearGradient.endValue.indexOf('%') === -1 ?\n                    element.linearGradient.endValue : parseFloat(element.linearGradient.endValue).toString()) + '%') : '100%')),\n            y1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'bottom' ? '100%' : '0%') : '0%'),\n            y2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1\n                ? (direction === 'top' ? '100%' : '0%') : '0%')\n        };\n        return linearPosition;\n    };\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - Specifies the index of the axis.\n     * @param { string } direction - Specifies the gradient position.\n     * @param { number } rangeIndex - Specifies the index of the range.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.getLinearGradientColor = function (element, index, direction, rangeIndex) {\n        var render = new SvgRenderer('');\n        var colors = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            this.getCircularGradientColor(element.linearGradient.colorStop, index) :\n            this.getGradientColor(element.linearGradient.colorStop);\n        var name = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            '_' + this.gauge.svgObject.id + '_range_' +\n                rangeIndex + '_color_' + index + '_' + 'linearGradient'\n            : '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'linearGradient';\n        var gradientPosition = this.calculateLinearGradientPosition(element, name, direction);\n        gradientPosition = {\n            id: gradientPosition.id,\n            x1: gradientPosition.x1,\n            x2: gradientPosition.x2,\n            y1: gradientPosition.y1,\n            y2: gradientPosition.y2\n        };\n        var def = render.drawGradient('linearGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get color, opacity, offset and style for circular gradient path.\n     *\n     * @private\n     */\n    Gradient.prototype.getCircularGradientColor = function (colorStop, index) {\n        var colors = [];\n        var colorIndex = index;\n        for (var j = colorIndex; j < (index === (colorStop.length - 1) ? index + 1 : index + 2); j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n            colorIndex++;\n        }\n        return colors;\n    };\n    /**\n     * To get the radial gradient string.\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    Gradient.prototype.getRadialGradientColor = function (element) {\n        var render = new SvgRenderer('');\n        var colors = this.getGradientColor(element.radialGradient.colorStop);\n        var name = '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'radialGradient';\n        var gradientPosition = {\n            id: name,\n            r: (element.radialGradient.radius.indexOf('%') === -1 ?\n                element.radialGradient.radius :\n                parseFloat(element.radialGradient.radius).toString()) + '%',\n            cx: (element.radialGradient.outerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.x :\n                parseFloat(element.radialGradient.outerPosition.x).toString()) + '%',\n            cy: (element.radialGradient.outerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.y :\n                parseFloat(element.radialGradient.outerPosition.y).toString()) + '%',\n            fx: (element.radialGradient.innerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.x :\n                parseFloat(element.radialGradient.innerPosition.x).toString()) + '%',\n            fy: (element.radialGradient.innerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.y :\n                parseFloat(element.radialGradient.innerPosition.y).toString()) + '%'\n        };\n        var def = render.drawGradient('radialGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style.\n     *\n     * @param { ColorStopModel[]} colorStop - Specifies the color stop.\n     * @returns {GradientColor[]} - Returns the gradientColor.\n     * @private\n     */\n    Gradient.prototype.getGradientColor = function (colorStop) {\n        var colors = [];\n        for (var j = 0; j < colorStop.length; j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n        }\n        return colors;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get a gradient color string\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string\n     * @private\n     */\n    Gradient.prototype.getGradientColorString = function (element, index, direction, rangeIndex) {\n        var gradientColor;\n        if ((element.linearGradient && !isNullOrUndefined(element.linearGradient.colorStop)) ||\n            (element.radialGradient && !isNullOrUndefined(element.radialGradient.colorStop))) {\n            if (element.linearGradient) {\n                gradientColor = this.getLinearGradientColor(element, index, direction, rangeIndex);\n            }\n            else {\n                gradientColor = this.getRadialGradientColor(element);\n            }\n            this.gauge.gradientCount = this.gauge.gradientCount + 1;\n        }\n        else {\n            return null;\n        }\n        return gradientColor;\n    };\n    Gradient.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Gradient';\n    };\n    /**\n     * To destroy the Gradient.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    Gradient.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Gradient;\n}());\nexport { Gradient };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable max-len */\n/* eslint-disable brace-style */\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { removeElement, getElement, stringToNumber, measureText, toPixel, textElement, getAngleFromValue, getAngleFromLocation, getPathArc, getPointer, RectOption, Size, GaugeLocation, Rect, TextOption } from './utils/helper-common';\nimport { setStyles, getValueFromAngle, getRange } from './utils/helper-circular-gauge';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, pointerMove } from './model/constants';\nimport { rangeMove, pointerStart, rangeStart, pointerEnd, rangeEnd } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { LegendSettings, Legend } from './legend/legend';\nimport { PdfExport } from './model/pdf-export';\nimport { ImageExport } from './model/image-export';\nimport { Print } from './model/print';\nimport { Gradient } from './axes/gradient';\n/**\n * Represents the circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param {CircularGaugeModel} options - Specifies the options\n     * @param {string} element - Specifies the element\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.isRangeUpdate = false;\n        /** @private */\n        _this.isDrag = false;\n        /**\n         * @private\n         */\n        _this.gradientCount = 0;\n        return _this;\n    }\n    /**\n     * To create svg object, renderer and binding events for the container.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.renderElements();\n        this.renderComplete();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            var tooltip = _this.tooltipModule;\n            if (!args.cancel) {\n                if ((_this.enablePointerDrag || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.enablePointerDrag) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {\n                        _this.svgObject.setAttribute('cursor', 'pointer');\n                    }\n                    else {\n                        _this.svgObject.setAttribute('cursor', 'auto');\n                    }\n                }\n                var svgElement = getElement(_this.element.id + '_svg');\n                var extraWidth = _this.element.getBoundingClientRect().left - svgElement.getBoundingClientRect().left;\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    _this.isDrag = true;\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragPointInd);\n                    dragArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, dragArgs);\n                    _this.activeRange = null;\n                }\n                else if (_this.enableRangeDrag && _this.activeRange) {\n                    _this.isDrag = true;\n                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        name: dragMove,\n                        type: rangeMove,\n                        range: _this.activeRange,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    _this.rangeDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragRangeInd);\n                    _this.trigger(dragMove, dragArgs);\n                }\n            }\n        });\n        if (!this.isTouch) {\n            if (this.legendModule && this.legendSettings.visible) {\n                this.legendModule.move(e);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.activeRange = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     *\n     * @param {MouseEvent | PointerEvent} event - Specifies the pointer or mouse event.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the location of the gauge\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} pointerIndex - Specifies the pointer index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.axes[axisIndex].pointers[pointerIndex].value = value;\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the range draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the gauge location\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} rangeIndex - Specifies the range index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {\n        if (this.activeAxis) {\n            var axis = this.activeAxis;\n            var range = axis.visibleRange;\n            var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n            if (value >= range.min && value <= range.max) {\n                var previousValue1 = this.activeRange.currentValue;\n                this.activeRange.currentValue = value;\n                var add = (this.activeRange.end - this.activeRange.start);\n                var div = add / 2;\n                var avg = parseFloat(this.activeRange.start.toString()) + div;\n                this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : ((this.activeRange.start < this.activeRange.end) ? this.activeRange.start : this.activeRange.end));\n                this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : ((this.activeRange.start < this.activeRange.end) ? this.activeRange.end : this.activeRange.start)) : value;\n                this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;\n                this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;\n            }\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var currentRange;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Pointer_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                if (_this.activePointer.type === 'Marker' && _this.activePointer.markerShape === 'Text' && _this.activePointer.pathElement.length === 0) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: pointerStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                if (_this.enablePointerDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n            else if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Range_') >= 0) {\n                currentRange = getRange(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentRange.axisIndex];\n                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];\n                if (isNullOrUndefined(_this.activeRange.pathElement)) {\n                    _this.activeRange.pathElement = [e.target];\n                }\n                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: rangeStart,\n                    range: _this.activeRange,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                });\n                if (_this.enableRangeDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, args);\n        if (this.activeAxis && this.activePointer && this.enablePointerDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: pointerEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n            this.isDrag = false;\n        }\n        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: rangeEnd,\n                axis: this.activeAxis,\n                range: this.activeRange,\n                axisIndex: axisInd,\n                rangeIndex: rangeInd\n            });\n            this.activeAxis = null;\n            this.activeRange = null;\n            this.isDrag = false;\n        }\n        if (!isNullOrUndefined(this.activePointer)) {\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @param {string} type - Specifies the type\n     * @param {string} name - Specifies the name\n     * @returns {IMouseEventArgs} - Returns the mouse event args\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     *\n     * @param {Event} e - Specifies the event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: this,\n            previousSize: this.availableSize,\n            name: resized,\n            cancel: false,\n            currentSize: this.calculateSvgSize()\n        };\n        this.trigger(resized, args);\n        if (!args.cancel) {\n            if (this.resizeTo) {\n                clearTimeout(this.resizeTo);\n            }\n            if (!isNullOrUndefined(this.element) && this.element.classList.contains('e-circulargauge')) {\n                this.animatePointer = false;\n                this.resizeTo = window.setTimeout(function () {\n                    _this.createSvg();\n                    _this.calculateBounds();\n                    _this.renderElements();\n                }, 500);\n            }\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     *\n     * @param {HTMLElement} element - Specifies the html element\n     * @returns {void}\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.availableSize = this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        removeElement(this.element.id + '_svg');\n        this.clearTemplate();\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        return new Size(width, height);\n    };\n    /**\n     * To calculate the spacing of the circular gauge element.\n     *\n     * @param {number} top - Specifies the top value\n     * @param {number} left - Specifies the left value\n     * @param {number} width - Specifies the width\n     * @param {number} height - Specifies the height\n     * @param {number} radius - Specifies the radius\n     * @param {number} titleHeight - Specifies the titleHeight\n     * @param {number} isUpperAngle - Specifies the isUpperAngle\n     * @param {number} isLowerAngle - Specifies the isLowerAngle\n     * @param {number} isFullPercent - Specifies the boolean value\n     * @param {number} isUpper - Specifies the boolean value\n     * @param {number} isLower - Specifies the boolean value\n     * @returns {void}\n     */\n    /* eslint-disable max-len */\n    CircularGauge.prototype.radiusAndCenterCalculation = function (top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower) {\n        var rect;\n        var bottom = this.margin.bottom + this.border.width;\n        var minRadius;\n        var widthRadius;\n        var centerX;\n        var centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            if (!this.allowMargin) {\n                if (!isNullOrUndefined(this.legendModule) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                    minRadius = Math.min(width, height) / 2;\n                    rect = new Rect((left + (width / 2) - minRadius), (top + (height / 2) - minRadius), minRadius * 2, minRadius * 2);\n                }\n                else {\n                    if (width > height && (isLowerAngle && isLower || isUpperAngle && isUpper)) {\n                        widthRadius = ((width) / 2);\n                        var heightValue = isUpper && isLower ? (height / 2) : (height * (3 / 4));\n                        if (widthRadius > heightValue) {\n                            widthRadius = heightValue;\n                        }\n                        rect = new Rect((left + (width / 2) - widthRadius), (top + (height / 2) - widthRadius), widthRadius * 2, widthRadius * 2);\n                    }\n                    else {\n                        if (height > width) {\n                            var heightRadius = height / 2;\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - heightRadius), radius * 2, heightRadius * 2);\n                        }\n                        else {\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n                        }\n                    }\n                }\n            }\n            else {\n                rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            }\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        if (!this.allowMargin) {\n            if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                var difference = height - this.gaugeRect.height;\n                this.gaugeRect.width = width - ((this.availableSize.width - this.gaugeRect.width) / 2);\n                this.gaugeRect.y = this.gaugeRect.y - difference;\n                this.gaugeRect.height = this.gaugeRect.height + difference + ((this.availableSize.height - this.gaugeRect.height) / 2);\n            }\n            else if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Left' || this.legendSettings.position === 'Right')) {\n                var difference = this.gaugeRect.height - this.gaugeRect.width;\n                this.gaugeRect.x = this.legendSettings.position === 'Right'\n                    ? this.gaugeRect.x + this.margin.right : this.gaugeRect.x;\n                this.gaugeRect.width = this.legendSettings.position === 'Left' ?\n                    Math.abs(width - ((this.availableSize.width - this.gaugeRect.width + difference) / 2))\n                    : Math.abs(width - ((this.availableSize.width - this.gaugeRect.width) / 2) - 10);\n            }\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            if ((isUpperAngle || isLowerAngle) && !isNullOrUndefined(this.legendModule)) {\n                centerX = (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')\n                    ? this.availableSize.width / 2 : this.legendSettings.position === 'Right' ? (this.gaugeRect.width / 2) + this.margin.right :\n                    centerX;\n            }\n            centerY = ((isUpperAngle || isLowerAngle) ? (isUpperAngle ?\n                (((this.gaugeRect.height * (3 / 4) + this.gaugeRect.y) - bottom))\n                : (((this.gaugeRect.height * (1 / 4)) + (this.gaugeRect.y)))) : this.gaugeRect.y + (this.gaugeRect.height / 2));\n            centerY = !isFullPercent && (isUpperAngle || isLowerAngle) ? (this.gaugeRect.height / 2) + this.gaugeRect.y + (radiusPercent * (3 / 4) * (1 / 2)) : centerY;\n            if (!isNullOrUndefined(this.axes) && this.axes.length > 1 && !isNullOrUndefined(this.midPoint)) {\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                if (isUpper && isLower) {\n                    centerY = (this.availableSize.height / 2) - bottom;\n                }\n            }\n        }\n        else {\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            centerY = this.centerYpoint !== null ?\n                stringToNumber(this.centerYpoint, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        }\n        this.midPoint = new GaugeLocation(centerX, centerY);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var bottom = margin.bottom + this.border.width;\n        var left = margin.left + this.border.width;\n        var isUpper = false;\n        var isLower = false;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        this.centerXpoint = (this.centerX === '') ? null : this.centerX;\n        this.centerYpoint = (this.centerY === '') ? null : this.centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        if (!this.allowMargin) {\n            for (var j = 0; j < this.axes.length; j++) {\n                var isUpperAngle = 270 <= this.axes[j].startAngle && this.axes[j].startAngle <= 360 &&\n                    0 <= this.axes[j].endAngle && this.axes[j].endAngle <= 90;\n                var isLowerAngle = 90 >= this.axes[j].startAngle && this.axes[j].startAngle <= 180 &&\n                    180 <= this.axes[j].endAngle && 270 <= this.axes[j].endAngle && 0 !== this.axes[j].startAngle &&\n                    360 !== this.axes[j].endAngle;\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                var isFullPercent = this.axes[j].radius !== null ? parseInt(this.axes[0].radius.split('%')[0], 10) >= 100 : true;\n                var radiusPercent = this.axes[j].radius !== null ? radius * (parseInt(this.axes[0].radius.split('%')[0], 10) / 100) : radius;\n                this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower);\n            }\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, false, false, null, null, false, false);\n        }\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     *\n     * @param {boolean} animate - Specifies whether animation is true or false\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n        removeElement('gauge-measuretext');\n    };\n    /**\n     * Method to render legend for accumulation chart\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            this.titleStyle.fontFamily = this.themeStyle.fontFamily || this.titleStyle.fontFamily;\n            this.titleStyle.size = this.themeStyle.fontSize || this.titleStyle.size;\n            this.titleStyle.fontWeight = this.titleStyle.fontWeight || this.themeStyle.titleFontWeight;\n            var titleSize = this.titleStyle.size;\n            if (!isNaN(Number(titleSize))) {\n                this.titleStyle.size = titleSize + 'px';\n            }\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to set the pointer value dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param pointerIndex - Specifies the index value for the pointer in circular gauge.\n     * @param value - Specifies the value for the pointer in circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        this.isProtectedOnChange = true;\n        pointer.previousValue = pointer.currentValue;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * This method is used to set the annotation content dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param annotationIndex - Specifies the index value for the annotation in circular gauge.\n     * @param content - Specifies the content for the annotation in circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            var secondaryElement = getElement(this.element.id + '_Secondary_Element');\n            if (!isElementExist && !isNullOrUndefined(secondaryElement)) {\n                secondaryElement.appendChild(element);\n            }\n        }\n    };\n    /**\n     * This method is used to print the rendered circular gauge.\n     *\n     * @param id - Specifies the element to print the circular gauge.\n     */\n    CircularGauge.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the circular gauge.\n     *\n     * @param type - Specifies the type of the export.\n     * @param fileName - Specifies the file name for the exported file.\n     * @param  orientation - Specified the orientation for the exported pdf document.\n     * @param allowDownload - Specifies whether to download as a file.\n     */\n    CircularGauge.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    /**\n     * Method to set mouse x, y from events\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {void}\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * This method is used to set the range values dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param rangeIndex - Specifies the index value for the range in circular gauge.\n     * @param start - Specifies the start value for the current range in circular gauge.\n     * @param end - Specifies the end value for the current range i circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var oldRangeStart = range.start;\n        var oldRangeEnd = range.end;\n        range.start = start;\n        range.end = end;\n        if (range.start !== range.end && oldRangeStart === oldRangeEnd && this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            var height = this.legendModule.legendBounds.height + this.legendSettings.margin.top + this.legendSettings.margin.bottom + this.legendSettings.border.width;\n            var width = this.legendModule.legendBounds.width + this.legendSettings.margin.left + this.legendSettings.margin.right + this.legendSettings.border.width;\n            var rect = this.gaugeRect;\n            var position = this.legendModule.position;\n            if (position === 'Bottom') {\n                rect.height = rect.height + height;\n            }\n            if (position === 'Top') {\n                rect.height = rect.height + height;\n                rect.y = rect.y - height;\n            }\n            if (position === 'Left') {\n                rect.width = rect.width + width;\n                rect.x = rect.x - width;\n            }\n            if (position === 'Right') {\n                rect.width = rect.width + width;\n            }\n            this.legendModule.calculateLegendBounds(rect, this.availableSize);\n            if (this.legendModule.legendCollection.length) {\n                this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);\n            }\n        }\n        this.isRangeUpdate = true;\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     *\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns the modules\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print]\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend]\n            });\n        }\n        modules.push({\n            member: 'Gradient',\n            args: [this, Gradient]\n        });\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {CircularGaugeModel} newProp - Specifies the new property\n     * @param {CircularGaugeModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'legendSettings':\n                    refreshWithoutAnimation = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame && !this.isRangeUpdate) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n        this.isRangeUpdate = false;\n    };\n    /**\n     * Get component name for circular gauge\n     *\n     * @returns {string} - Returns the module name\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null, fontWeight: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enableRangeDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowMargin\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"beforePrint\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n","import * as index from './index';\nindex.CircularGauge.Inject(index.GaugeTooltip, index.Annotations, index.Legend, index.Print, index.PdfExport, index.ImageExport, index.Gradient);\nexport * from './index';\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","fill","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","element","gauge","functionName","isCompleteAngle","startAngle","endAngle","totalAngle","Math","floor","getDegree","degree","getAngleFromValue","maximumValue","minimumValue","isClockWise","angle","round","getAngleFromLocation","center","point","atan2","PI","getLocationFromAngle","radius","radian","GaugeLocation","cos","sin","getPathArc","start","end","startWidth","endWidth","range","axis","isNullOrUndefined","startRadius","position","isLinearCircularGradient","direction","endRadius","arcRadius","insideArcRadius","insideEndRadius","insideStartRadius","getRangePath","getCirclePath","arcPath","arcStartOne","arcEndOne","arcStartTwo","arcEndTwo","clockWise","innerStart","innerEnd","pointPosition","arcRoundedPath","outerOldEnd","innerOldEnd","innerOldStart","outerOldStart","roundedPath","arcWidthPath","endArc","startArc","widthDifference","abs","arcWidthPathCalculation","roundedArcWidthPathCalculation","startValueToAngle","maximum","minimum","endRadii","sqrt","pow","centerStartDistance","centerDistance","roundedCornerRadius","arcStart","arcEnd","angleValueDirection","endRadiusValue","arcTwo","startGreater","arcOne","degreeAngle","degreeValueOne","degreeValueTwo","startAddArc","startSubArc","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getTemplateFunction","template","templateFn","isNaN","parseFloat","querySelectorAll","length","charAt","templateComplier","querySelector","trim","isVue","isVue3","e","removeElement","getElement","remove","stringToNumber","containerSize","getPointer","targetId","tempString","replace","split","axisIndex","pointerIndex","getLabelFormat","format","match","calculateShapes","location","shape","url","path","space","width","height","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","stroke","setStyles","border","setStyleAttribute","stroke-width","getValueFromAngle","getRange","rangeIndex","getRangePalette","theme","palette","toLowerCase","getThemeStyle","backgroundColor","titleFontColor","tooltipFillColor","tooltipFontColor","labelColor","lineColor","majorTickColor","minorTickColor","pointerColor","capColor","needleColor","needleTailColor","labelFontFamily","titleFontWeight","fontSize","tooltipFillOpacity","tooltipTextOpacity","getMousePosition","pageX","pageY","elementRect","getBoundingClientRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getElementSize","elementSize","tooltipData","templateElement","templateLength","calculateSum","from","to","values","sum","getRangeColor","ranges","min","max","currentRange","filter","rangeColor","linear","currentTime","startValue","endValue","duration","getCompleteArc","innerRadius","checkMinValue","getCompletePath","textTrim","maxWidth","label","i","substring","showTooltip","areaWidth","tooltip","toString","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","axisLabelFont","legendLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","Annotations","elementId","renderAnnotation","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","renderReactTemplates","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","observedArgs","length_1","slice","updateLocation","currentRadius","midPoint","measureElementRect","description","getModuleName","destroy","bounds","GaugeTooltip","tooltipId","borderStyle","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","isTooltipRender","type","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","currentPointer","currentAxis","angle_1","currentValue","visibleRange","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent_1","RegExp","tooltipArgs","pointer","event","appendInBodyTag","pointerTooltip","tooltipRect","findPosition","themeStyle","svgTooltip","svgTooltipCreate","arrowInverted","appendTo","tooltipPosition","isDrag","rangeSvgRect_1","rangeElementRect","rangeAxisRect_1","rect_2","rangeAngle_1","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData_1","endData_1","rangeContent_1","rangeTooltipArgs","rangeTooltipTextStyle_1","rangeTooltip","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","rect_3","currentAnnotation","annotationAngle","annotationContent","annotationSettings","annotationTooltipArgs","annotationTooltip","annotationTemplate","elementSizeAn","removeTooltip","clearTemplate","gaugeRect","offsetLeft","tooltipLeft","tooltipArg","Tooltip","enable","data","enableAnimation","inverted","areaBounds","controlInstance","className","child","roundingPlaces","toFixed","isTemplate","addLeft","addTop","addHeight","addWidth","isTooltipRemoved","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","checkAngles","drawAxisLine","lineStyle","allowComponentRender","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","checkLabelOpposed","majorTicks","minorTicks","labelPadding","shouldMaintainPadding","nearSize","maxLabelSize","offset","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","lastlabel","FindAxisLabelCollision","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorInterval","interval","isRangeColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","push","axisLineWidth","drawRangePath","rangeElement","colorIndex","roundedStartAngle","roundedEndAngle","gradientRangeColor","rangeSplitValue","linearGradient","colorStop","rangeStart","rangeEnd","isAngleCross360","rangeGap","startAndEndRangeGap","process","degreeValue","gradientModule","radialGradient","rangeColorLength","degreeRange","degreeRangeValue","gradientDegree","gradientAngle","gradientAntiAngle","getGradientColorString","roundedRangeAppendPathCalculation","ceil","rangeAppendPathCalculation","pathElement","drawAxisRange","startEndDifference","previousEndWidth","previousStartWidth","currentDistanceFromScale","calculateRangeRadius","calculateRangeRadiusWithPosition","rangeColors","PointerRenderer","drawPointers","animate","pointerElement","pointers","calculatePointerRadius","setPointerValue","animation","doPointerAnimation","pointerRadiusForPosition","markerShape","pointerSize","markerOffset","rangeBarOffset","pointerWidth","markerWidth","drawNeedlePointer","pointerRadius","rectDirection","gradientColor","gradientTailColor","gradientCapColor","needle","needleTail","cap","needleStartWidth","needleEndWidth","mid","minRadius","oldStartValue","oldEndValue","roundStartAngle","roundEndAngle","textangle","textlocation","String","drawMarkerPointer","gradientMarkerColor","shapeBasedOnPosition","markerHeight","imageUrl","drawRangeBarPointer","gradientBarColor","previousValue","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","roundRadius","arg","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","this_1","_i","_a","moveToCenter","centerXpoint","centerYpoint","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","calculateNumericInterval","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","log","currentInterval","this_2","axisLabelRenderSuccess","lastLabel","maxVal","getMaxLabelWidth","lineSize","outerHeight","innerHeight","heightForCross","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","Location","LegendSettings","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendSettings","legendID","click","getLegendOptions","legendCollection","j","legendText","LegendOptions","visible","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","redraw","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translatePage","pagingText","page","pageNumber","translate","textContent","group","fontcolor","prevLegend","maxColumnWidth","previousBound","totalRowCount","availablewidth","getAvailWidth","legendItemsId","toggledIndex","legendItemsId_1","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","visibility","legendCollections","legendCollections_1","pageUp","pageText","tx","legendX","drawRectangle","legendItemsGroup","clippath","createClipPath","isAnimate","forceAnimate","isRect","previousRect","animateDuration","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","columns_1","move","mouseX","mouseY","legends","originalText","offsetWidth","circulargauge","PdfExport","control","export","fileName","orientation","allowDownload","Promise","resolve","reject","attrs","userAgent","PdfPageOrientation","Landscape","exportElement","cloneNode","childNodes","window","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image","Image","context","getContext","onload","drawImage","revokeObjectURL","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","src","ImageExport","isDownload","svgData","outerHTML","triggerDownload","image_1","context_1","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Print","print","elements","printWindow","open","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","beforePrintArgs","div","forEach","Element","ColorStop","GradientPosition","LinearGradient","RadialGradient","Gradient","calculateLinearGradientPosition","x1","x2","y1","y2","getLinearGradientColor","colors","getCircularGradientColor","getGradientColor","gradientCount","gradientPosition","def","drawGradient","getRadialGradientColor","outerPosition","fx","innerPosition","fy","CircularGauge","isRangeUpdate","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderComplete","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","isPointer","mouseLeave","isTouch","gaugeResize","setGaugeStyle","setMouseXY","legendModule","getMouseArgs","dragArgs","tooltipModule","enableRangeDrag","svgElement","activePointer","dragPointInd","dragAxisInd","activeAxis","pointerDrag","activeRange","dragRangeInd","rangeDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","previousValue1","avg","pointInd","axisInd","rangeInd","pointerInd","clientX","clientY","previousSize","currentSize","calculateSvgSize","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","containerHeight","offsetHeight","borderWidth","join","radiusAndCenterCalculation","titleHeight","isUpperAngle","isLowerAngle","isFullPercent","radiusPercent","isUpper","isLower","widthRadius","centerX","centerY","allowMargin","heightValue","heightRadius","difference","title","titleStyle","renderBorder","renderTitle","titleSize","Number","tabIndex","isProtectedOnChange","setAnnotationValue","isElementExist","secondaryElement","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","svgRect","setRangeValue","axisRange","oldRangeStart","oldRangeEnd","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","Event","NotifyPropertyChanges","Component","index.CircularGauge","Inject","index.GaugeTooltip","index.Annotations","index.Legend","index.Print","index.PdfExport","index.ImageExport","index.Gradient"],"mappings":"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"}
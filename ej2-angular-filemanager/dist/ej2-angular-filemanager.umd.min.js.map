/*!
*  filename: ej2-angular-filemanager.umd.min.js.map
*  version : 20.2.43
*  Copyright Syncfusion Inc. 2001 - 2018. All rights reserved.
*  Use of this code is subject to the terms of our license.
*  A copy of the current license can be obtained at any time by e-mailing
*  licensing@syncfusion.com. Any infringement will be prosecuted under
*  applicable laws. 
*/

{"version":3,"file":"ej2-angular-filemanager.umd.min.js","sources":["~/@syncfusion/ej2-angular-filemanager/src/file-manager/filemanager.component.ts","~/@syncfusion/ej2-angular-filemanager/src/file-manager/filemanager.module.ts","~/@syncfusion/ej2-angular-filemanager/src/file-manager/filemanager-all.module.ts"],"sourcesContent":["import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { FileManager } from '@syncfusion/ej2-filemanager';\n\n\n\nexport const /** @type {?} */ inputs: string[] = ['ajaxSettings','allowDragAndDrop','allowMultiSelection','contextMenuSettings','cssClass','detailsViewSettings','enableHtmlSanitizer','enablePersistence','enableRtl','height','locale','navigationPaneSettings','path','popupTarget','rootAliasName','searchSettings','selectedItems','showFileExtension','showHiddenItems','showThumbnail','sortBy','sortOrder','toolbarSettings','uploadSettings','view','width'];\nexport const /** @type {?} */ outputs: string[] = ['beforeDownload','beforeImageLoad','beforePopupClose','beforePopupOpen','beforeSend','created','destroyed','failure','fileDragStart','fileDragStop','fileDragging','fileDropped','fileLoad','fileOpen','fileSelect','fileSelection','menuClick','menuOpen','popupClose','popupOpen','success','toolbarClick','toolbarCreate','uploadListCreate'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * Represents the Essential JS 2 Angular FileManager Component.\n * ```html\n * <ejs-filemanager showThumbnail='false'></ejs-filemanager>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class FileManagerComponent extends FileManager implements IComponentBase {\npublic context : any;\npublic tagObjects: any;\n\tbeforeDownload: any;\n\tbeforeImageLoad: any;\n\tbeforePopupClose: any;\n\tbeforePopupOpen: any;\n\tbeforeSend: any;\n\tcreated: any;\n\tdestroyed: any;\n\tfailure: any;\n\tfileDragStart: any;\n\tfileDragStop: any;\n\tfileDragging: any;\n\tfileDropped: any;\n\tfileLoad: any;\n\tfileOpen: any;\n\tfileSelect: any;\n\tfileSelection: any;\n\tmenuClick: any;\n\tmenuOpen: any;\n\tpopupClose: any;\n\tpopupOpen: any;\n\tsuccess: any;\n\ttoolbarClick: any;\n\ttoolbarCreate: any;\npublic uploadListCreate: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('FileManagerDetailsView');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('FileManagerNavigationPane');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('FileManagerLargeIconsView');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('FileManagerToolbar');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('FileManagerContextMenu');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('FileManagerBreadCrumbBar');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        \n        this.context.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-filemanager',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\n}\n\nfunction FileManagerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFileManagerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileManagerComponent.ctorParameters;\n/** @type {?} */\nFileManagerComponent.prototype.context;\n/** @type {?} */\nFileManagerComponent.prototype.tagObjects;\n/** @type {?} */\nFileManagerComponent.prototype.beforeDownload;\n/** @type {?} */\nFileManagerComponent.prototype.beforeImageLoad;\n/** @type {?} */\nFileManagerComponent.prototype.beforePopupClose;\n/** @type {?} */\nFileManagerComponent.prototype.beforePopupOpen;\n/** @type {?} */\nFileManagerComponent.prototype.beforeSend;\n/** @type {?} */\nFileManagerComponent.prototype.created;\n/** @type {?} */\nFileManagerComponent.prototype.destroyed;\n/** @type {?} */\nFileManagerComponent.prototype.failure;\n/** @type {?} */\nFileManagerComponent.prototype.fileDragStart;\n/** @type {?} */\nFileManagerComponent.prototype.fileDragStop;\n/** @type {?} */\nFileManagerComponent.prototype.fileDragging;\n/** @type {?} */\nFileManagerComponent.prototype.fileDropped;\n/** @type {?} */\nFileManagerComponent.prototype.fileLoad;\n/** @type {?} */\nFileManagerComponent.prototype.fileOpen;\n/** @type {?} */\nFileManagerComponent.prototype.fileSelect;\n/** @type {?} */\nFileManagerComponent.prototype.fileSelection;\n/** @type {?} */\nFileManagerComponent.prototype.menuClick;\n/** @type {?} */\nFileManagerComponent.prototype.menuOpen;\n/** @type {?} */\nFileManagerComponent.prototype.popupClose;\n/** @type {?} */\nFileManagerComponent.prototype.popupOpen;\n/** @type {?} */\nFileManagerComponent.prototype.success;\n/** @type {?} */\nFileManagerComponent.prototype.toolbarClick;\n/** @type {?} */\nFileManagerComponent.prototype.toolbarCreate;\n/** @type {?} */\nFileManagerComponent.prototype.uploadListCreate;\n/** @type {?} */\nFileManagerComponent.prototype.registerEvents;\n/** @type {?} */\nFileManagerComponent.prototype.addTwoWay;\n/** @type {?} */\nFileManagerComponent.prototype.ngEle;\n/** @type {?} */\nFileManagerComponent.prototype.srenderer;\n/** @type {?} */\nFileManagerComponent.prototype.viewContainerRef;\n/** @type {?} */\nFileManagerComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FileManagerComponent } from './filemanager.component';\n/**\n * NgModule definition for the FileManager component.\n */\nexport class FileManagerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        FileManagerComponent\n    ],\n    exports: [\n        FileManagerComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileManagerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFileManagerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileManagerModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FileManagerComponent } from './filemanager.component';\nimport { FileManagerModule } from './filemanager.module';\nimport {DetailsView, NavigationPane, LargeIconsView, Toolbar, ContextMenu, BreadCrumbBar} from '@syncfusion/ej2-filemanager';\n\n\nexport const /** @type {?} */ DetailsViewService: ValueProvider = { provide: 'FileManagerDetailsView', useValue: DetailsView};\nexport const /** @type {?} */ NavigationPaneService: ValueProvider = { provide: 'FileManagerNavigationPane', useValue: NavigationPane};\nexport const /** @type {?} */ LargeIconsViewService: ValueProvider = { provide: 'FileManagerLargeIconsView', useValue: LargeIconsView};\nexport const /** @type {?} */ ToolbarService: ValueProvider = { provide: 'FileManagerToolbar', useValue: Toolbar};\nexport const /** @type {?} */ ContextMenuService: ValueProvider = { provide: 'FileManagerContextMenu', useValue: ContextMenu};\nexport const /** @type {?} */ BreadCrumbBarService: ValueProvider = { provide: 'FileManagerBreadCrumbBar', useValue: BreadCrumbBar};\n/**\n * NgModule definition for the FileManager component with providers.\n */\nexport class FileManagerAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, FileManagerModule],\n    exports: [\n        FileManagerModule\n    ],\n    providers:[\n        DetailsViewService,\n        NavigationPaneService,\n        LargeIconsViewService,\n        ToolbarService,\n        ContextMenuService,\n        BreadCrumbBarService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileManagerAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFileManagerAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileManagerAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["inputs","outputs","twoWays","exports","FileManagerComponent","_super","ngEle","srenderer","viewContainerRef","injector","_this","call","this","element","nativeElement","injectedModules","mod","get","indexOf","push","_a","_b","_c","_d","_e","_f","registerEvents","addTwoWay","setValue","context","ComponentBase","__extends","prototype","ngOnInit","ngAfterViewInit","ngOnDestroy","ngAfterContentChecked","FileManager","decorators","type","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","queries","ctorParameters","ElementRef","Renderer2","ViewContainerRef","Injector","__decorate","ComponentMixins","__metadata","FileManagerModule","NgModule","imports","CommonModule","declarations","DetailsViewService","provide","useValue","DetailsView","NavigationPaneService","NavigationPane","LargeIconsViewService","LargeIconsView","ToolbarService","Toolbar","ContextMenuService","ContextMenu","BreadCrumbBarService","BreadCrumbBar","FileManagerAllModule","providers"],"mappings":"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"}
